#!/bin/bash

# =============================================================================
# üîÑ DATABASE RESTORE SCRIPT - August 12, 2025
# Ph·ª•c h·ªìi database v·ªõi c·∫•u tr√∫c ho√†n ch·ªânh theo README_DAT.md
# =============================================================================

echo "üîÑ DATABASE RESTORE - August 12, 2025"
echo "====================================="

# Ki·ªÉm tra k·∫øt n·ªëi database
echo "üîç Checking database connection..."
if ! sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -Q "SELECT 1" -o /dev/null 2>&1; then
    echo "‚ùå Cannot connect to database. Please ensure Docker container is running."
    echo "   Run: ./restore_original_docker.sh"
    exit 1
fi

echo "‚úÖ Database connection successful"

# Ki·ªÉm tra database TinhKhoanDB
echo ""
echo "üóÑÔ∏è  Checking TinhKhoanDB..."
DB_EXISTS=$(sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -Q "SELECT COUNT(*) FROM sys.databases WHERE name = 'TinhKhoanDB'" -h-1 -W | tr -d ' \r\n')

if [ "$DB_EXISTS" = "0" ]; then
    echo "üìù Creating TinhKhoanDB database..."
    sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -Q "CREATE DATABASE TinhKhoanDB"
    echo "‚úÖ TinhKhoanDB created successfully"
else
    echo "‚úÖ TinhKhoanDB already exists"
fi

# Chuy·ªÉn sang TinhKhoanDB v√† ki·ªÉm tra b·∫£ng
echo ""
echo "üìä Checking current table structure..."
TABLE_COUNT=$(sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE'" -h-1 -W | tr -d ' \r\n')

echo "Current tables in database: $TABLE_COUNT"

if [ "$TABLE_COUNT" -lt "47" ]; then
    echo "‚ö†Ô∏è  Database needs to be restored with Entity Framework migrations"
    echo ""
    echo "üöÄ Restoring database structure using Entity Framework..."

    # Ch·∫°y Entity Framework migrations
    echo "üìù Running EF database update..."
    if dotnet ef database update --verbose; then
        echo "‚úÖ Entity Framework migrations completed successfully"

        # Ki·ªÉm tra l·∫°i s·ªë b·∫£ng sau migration
        NEW_TABLE_COUNT=$(sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE'" -h-1 -W | tr -d ' \r\n')
        echo "Tables after migration: $NEW_TABLE_COUNT"

    else
        echo "‚ùå Entity Framework migration failed"
        echo "   Trying alternative restoration method..."

        # Alternative: T·∫°o database structure c∆° b·∫£n
        echo "üîß Creating basic database structure..."

        # T·∫°o c√°c b·∫£ng c∆° b·∫£n
        sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "
        -- Create basic system tables if not exists
        IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Units')
        CREATE TABLE Units (
            Id INT IDENTITY(1,1) PRIMARY KEY,
            UnitCode NVARCHAR(50) NOT NULL,
            UnitName NVARCHAR(200) NOT NULL,
            UnitType NVARCHAR(50),
            ParentUnitId INT,
            CreatedAt DATETIME2 DEFAULT GETDATE(),
            UpdatedAt DATETIME2 DEFAULT GETDATE()
        );

        IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Roles')
        CREATE TABLE Roles (
            Id INT IDENTITY(1,1) PRIMARY KEY,
            RoleCode NVARCHAR(50) NOT NULL,
            RoleName NVARCHAR(200) NOT NULL,
            Description NVARCHAR(500),
            CreatedAt DATETIME2 DEFAULT GETDATE(),
            UpdatedAt DATETIME2 DEFAULT GETDATE()
        );

        IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'Employees')
        CREATE TABLE Employees (
            Id INT IDENTITY(1,1) PRIMARY KEY,
            EmployeeCode NVARCHAR(50) NOT NULL,
            FullName NVARCHAR(200) NOT NULL,
            UnitId INT,
            RoleId INT,
            Position NVARCHAR(100),
            CreatedAt DATETIME2 DEFAULT GETDATE(),
            UpdatedAt DATETIME2 DEFAULT GETDATE()
        );
        "

        if [ $? -eq 0 ]; then
            echo "‚úÖ Basic database structure created"
        else
            echo "‚ùå Failed to create basic structure"
        fi
    fi

else
    echo "‚úÖ Database structure appears complete ($TABLE_COUNT tables)"
fi

# Ki·ªÉm tra c√°c b·∫£ng d·ªØ li·ªáu ch√≠nh (8 core tables)
echo ""
echo "üìã Checking core data tables (8 tables)..."

CORE_TABLES=("DP01" "DPDA" "EI01" "GL01" "GL02" "GL41" "LN01" "LN03" "RR01")

for table in "${CORE_TABLES[@]}"; do
    TABLE_EXISTS=$(sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = '$table'" -h-1 -W | tr -d ' \r\n')

    if [ "$TABLE_EXISTS" = "1" ]; then
        # ƒê·∫øm records trong b·∫£ng
        RECORD_COUNT=$(sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "SELECT COUNT(*) FROM [$table]" -h-1 -W 2>/dev/null | tr -d ' \r\n')
        echo "  ‚úÖ $table: EXISTS (${RECORD_COUNT:-0} records)"
    else
        echo "  ‚ùå $table: MISSING"
    fi
done

# Ki·ªÉm tra temporal tables
echo ""
echo "üïí Checking temporal tables..."
TEMPORAL_COUNT=$(sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "SELECT COUNT(*) FROM sys.tables WHERE temporal_type = 2" -h-1 -W | tr -d ' \r\n')
echo "Temporal tables found: $TEMPORAL_COUNT"

# Populate c∆° b·∫£n n·∫øu c·∫ßn
echo ""
echo "üì¶ Checking basic data..."

# Ki·ªÉm tra Units
UNITS_COUNT=$(sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "SELECT COUNT(*) FROM Units" -h-1 -W 2>/dev/null | tr -d ' \r\n')
if [ "${UNITS_COUNT:-0}" -lt "5" ]; then
    echo "üìù Populating basic Units..."
    sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "
    INSERT INTO Units (UnitCode, UnitName, UnitType) VALUES
    ('CNL1', 'Lai Ch√¢u', 'CNL1'),
    ('HOISO', 'H·ªôi S·ªü', 'CNL1'),
    ('BINHLU', 'Chi nh√°nh B√¨nh L∆∞', 'CNL2'),
    ('PHONGTHO', 'Chi nh√°nh Phong Th·ªï', 'CNL2'),
    ('SINHO', 'Chi nh√°nh S√¨n H·ªì', 'CNL2')
    " 2>/dev/null
    echo "‚úÖ Basic Units populated"
fi

# Ki·ªÉm tra Roles
ROLES_COUNT=$(sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "SELECT COUNT(*) FROM Roles" -h-1 -W 2>/dev/null | tr -d ' \r\n')
if [ "${ROLES_COUNT:-0}" -lt "5" ]; then
    echo "üìù Populating basic Roles..."
    sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "
    INSERT INTO Roles (RoleCode, RoleName, Description) VALUES
    ('GiamdocCnl2', 'Gi√°m ƒë·ªëc CNL2', 'Gi√°m ƒë·ªëc chi nh√°nh c·∫•p 2'),
    ('TruongphongKhdn', 'Tr∆∞·ªüng ph√≤ng KHDN', 'Tr∆∞·ªüng ph√≤ng Kh√°ch h√†ng doanh nghi·ªáp'),
    ('TruongphongKhcn', 'Tr∆∞·ªüng ph√≤ng KHCN', 'Tr∆∞·ªüng ph√≤ng Kh√°ch h√†ng c√° nh√¢n'),
    ('PhophongKhdn', 'Ph√≥ ph√≤ng KHDN', 'Ph√≥ ph√≤ng Kh√°ch h√†ng doanh nghi·ªáp'),
    ('PhophongKhcn', 'Ph√≥ ph√≤ng KHCN', 'Ph√≥ ph√≤ng Kh√°ch h√†ng c√° nh√¢n')
    " 2>/dev/null
    echo "‚úÖ Basic Roles populated"
fi

# Final status check
echo ""
echo "üéØ FINAL DATABASE STATUS"
echo "========================"

FINAL_TABLE_COUNT=$(sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE'" -h-1 -W | tr -d ' \r\n')
FINAL_UNITS_COUNT=$(sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "SELECT COUNT(*) FROM Units" -h-1 -W 2>/dev/null | tr -d ' \r\n')
FINAL_ROLES_COUNT=$(sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -d TinhKhoanDB -Q "SELECT COUNT(*) FROM Roles" -h-1 -W 2>/dev/null | tr -d ' \r\n')

echo "üìä Database Statistics:"
echo "   ‚Ä¢ Total Tables: ${FINAL_TABLE_COUNT:-0}"
echo "   ‚Ä¢ Units: ${FINAL_UNITS_COUNT:-0}"
echo "   ‚Ä¢ Roles: ${FINAL_ROLES_COUNT:-0}"
echo "   ‚Ä¢ Database: TinhKhoanDB"
echo "   ‚Ä¢ Server: Azure SQL Edge 1.0.7"
echo "   ‚Ä¢ Connection: localhost:1433"

if [ "${FINAL_TABLE_COUNT:-0}" -gt "10" ]; then
    echo ""
    echo "‚úÖ Database restoration completed successfully!"
    echo "üöÄ Ready for backend development"
    echo ""
    echo "üìù Next steps:"
    echo "   1. Run backend: dotnet run"
    echo "   2. Test EI01 implementation"
    echo "   3. Continue with remaining tables"
else
    echo ""
    echo "‚ö†Ô∏è  Database partially restored"
    echo "   Some tables may be missing - run 'dotnet ef database update' manually"
fi
