2-using TinhKhoanApp.Api.Models.DTOs;
3-using TinhKhoanApp.Api.Services;
4-
5-namespace TinhKhoanApp.Api.Controllers
6-{
7-    [ApiController]
8-    [Route("api/rr01")]
9-    public class RR01Controller : ControllerBase
10-    {
11-        private readonly IRR01Service _rr01Service;
12:        private readonly DirectImportService _importService;
13-        private readonly ILogger<RR01Controller> _logger;
14-
15-        public RR01Controller(
16-            IRR01Service rr01Service,
17:            DirectImportService importService,
18-            ILogger<RR01Controller> logger)
19-        {
20-            _rr01Service = rr01Service;
21-            _importService = importService;
22-            _logger = logger;
23-        }
24-
25-        /// <summary>
26-        /// Get all RR01 records
27-        /// </summary>
--
196-        /// </summary>
197-        [HttpGet("statistics/{date}")]
198-        [ProducesResponseType(typeof(object), 200)]
199-        public async Task<IActionResult> GetStatistics(DateTime date)
200-        {
201-            var statistics = await _rr01Service.GetSummaryStatisticsAsync(date);
202-            return Ok(statistics);
203-        }
204-
205-        /// <summary>
206:        /// Import RR01 data from a CSV file
207-        /// </summary>
208-        [HttpPost("import")]
209-        [ProducesResponseType(typeof(object), 200)]
210-        [ProducesResponseType(400)]
211:        public async Task<IActionResult> ImportRR01([FromForm] IFormFile file, [FromQuery] string? statementDate = null)
212-        {
213-            if (file == null || file.Length == 0)
214-            {
215-                return BadRequest("No file uploaded.");
216-            }
217-
218-            if (!file.FileName.ToLower().Contains("rr01"))
219-            {
220-                return BadRequest("Invalid file. File name must contain 'rr01'.");
221-            }
222-
223-            try
224-            {
225:                _logger.LogInformation("Importing RR01 data from file {FileName}", file.FileName);
226:                var result = await _importService.ImportRR01DirectAsync(file, statementDate);
227-                return Ok(result);
228-            }
229-            catch (Exception ex)
230-            {
231-                _logger.LogError(ex, "Error importing RR01 data: {Message}", ex.Message);
232-                return BadRequest($"Error importing data: {ex.Message}");
233-            }
234-        }
235-    }
236-}
