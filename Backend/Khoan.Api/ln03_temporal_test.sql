-- ========================================
-- üï∞Ô∏è LN03 TEMPORAL TABLE TEST SCRIPT
-- ========================================  
-- T·∫°o b·∫£ng temporal m·ªõi ƒë·ªÉ test, sau ƒë√≥ migrate d·ªØ li·ªáu

USE TinhKhoanDB;
GO

PRINT 'üï∞Ô∏è TESTING TEMPORAL TABLE FUNCTIONALITY...';

-- ========================================
-- 1. T·∫†O B·∫¢NG TEMPORAL M·ªöI ƒê·ªÇ TEST
-- ========================================
PRINT 'ƒêang t·∫°o b·∫£ng LN03_Temporal ƒë·ªÉ test...';

-- Drop b·∫£ng test n·∫øu ƒë√£ t·ªìn t·∫°i
IF OBJECT_ID('LN03_Temporal', 'U') IS NOT NULL
BEGIN
    ALTER TABLE LN03_Temporal SET (SYSTEM_VERSIONING = OFF);
    DROP TABLE LN03_Temporal_History;
    DROP TABLE LN03_Temporal;
    PRINT 'ƒê√£ x√≥a b·∫£ng test c≈©.';
END

-- T·∫°o b·∫£ng temporal m·ªõi
CREATE TABLE LN03_Temporal (
    Id int IDENTITY(1,1) PRIMARY KEY,
    NGAY_DL datetime2,
    MACHINHANH nvarchar(50),
    MAKH nvarchar(200),
    TENKH nvarchar(500),
    SOTIENXLRR decimal(18,2),
    IS_DELETED bit DEFAULT 0,
    CREATED_DATE datetime2 DEFAULT GETDATE(),
    UPDATED_DATE datetime2 DEFAULT GETDATE(),
    
    -- Temporal columns
    SysStartTime datetime2 GENERATED ALWAYS AS ROW START HIDDEN 
        CONSTRAINT DF_LN03_Temporal_SysStart DEFAULT SYSUTCDATETIME(),
    SysEndTime datetime2 GENERATED ALWAYS AS ROW END HIDDEN 
        CONSTRAINT DF_LN03_Temporal_SysEnd DEFAULT CONVERT(datetime2, '9999-12-31 23:59:59.9999999'),
    
    -- Period definition
    PERIOD FOR SYSTEM_TIME (SysStartTime, SysEndTime)
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE = dbo.LN03_Temporal_History));

PRINT 'ƒê√£ t·∫°o LN03_Temporal v·ªõi System Versioning.';

-- ========================================
-- 2. TEST TEMPORAL FUNCTIONALITY
-- ========================================
PRINT '';
PRINT 'ƒêang test temporal functionality...';

-- Insert test record
DECLARE @TestId INT;
INSERT INTO LN03_Temporal (NGAY_DL, MACHINHANH, MAKH, TENKH, SOTIENXLRR)
VALUES ('2024-12-31', '7800', 'TEST001', 'Test Customer Original', 1000000.00);

SET @TestId = SCOPE_IDENTITY();
PRINT 'ƒê√£ insert record ID: ' + CAST(@TestId AS VARCHAR);

-- ƒê·ª£i 1 gi√¢y r·ªìi update ƒë·ªÉ t·∫°o l·ªãch s·ª≠
WAITFOR DELAY '00:00:01';
UPDATE LN03_Temporal 
SET TENKH = 'Test Customer Updated', SOTIENXLRR = 2000000.00
WHERE Id = @TestId;

PRINT 'ƒê√£ update record ƒë·ªÉ t·∫°o l·ªãch s·ª≠.';

-- Ki·ªÉm tra current data
PRINT '';
PRINT 'Current data:';
SELECT Id, TENKH, SOTIENXLRR FROM LN03_Temporal WHERE Id = @TestId;

-- Ki·ªÉm tra history data  
PRINT '';
PRINT 'History data:';
SELECT Id, TENKH, SOTIENXLRR, SysStartTime, SysEndTime 
FROM LN03_Temporal_History WHERE Id = @TestId;

-- Temporal query - l·∫•y data t·∫°i th·ªùi ƒëi·ªÉm qu√° kh·ª©
PRINT '';
PRINT 'Temporal query - data FOR SYSTEM_TIME ALL:';
SELECT Id, TENKH, SOTIENXLRR, SysStartTime, SysEndTime
FROM LN03_Temporal FOR SYSTEM_TIME ALL
WHERE Id = @TestId
ORDER BY SysStartTime;

-- Cleanup test record
DELETE FROM LN03_Temporal WHERE Id = @TestId;

-- ========================================
-- 3. KI·ªÇM TRA K·∫æT QU·∫¢
-- ========================================
PRINT '';
PRINT 'Ki·ªÉm tra b·∫£ng temporal:';

SELECT 
    t.name AS TableName,
    t.temporal_type_desc AS TemporalType,
    h.name AS HistoryTableName,
    CASE 
        WHEN t.temporal_type = 2 THEN 'SUCCESS: System-Versioned Temporal Table'
        ELSE 'ERROR: Not temporal'
    END AS Status
FROM sys.tables t
LEFT JOIN sys.tables h ON t.history_table_id = h.object_id  
WHERE t.name = 'LN03_Temporal';

PRINT '';
PRINT 'üéâ TEMPORAL TABLE TEST HO√ÄN TH√ÄNH!';
PRINT 'Temporal functionality ho·∫°t ƒë·ªông ch√≠nh x√°c.';
PRINT '';
PRINT 'üìã NEXT STEPS:';
PRINT '1. C√≥ th·ªÉ migrate d·ªØ li·ªáu t·ª´ LN03 sang LN03_Temporal';  
PRINT '2. Ho·∫∑c t·∫°o temporal table m·ªõi cho production';
PRINT '3. Re-enable temporal trong ApplicationDbContext';

GO
