#!/bin/bash

# Test Script cho DirectImportController v·ªõi 9 b·∫£ng
# File format: 7800_<table>_yyyymmdd.csv

echo "üß™ TESTING DirectImportController v·ªõi 9 b·∫£ng"
echo "=============================================="

API_BASE="http://localhost:5000/api/DirectImport"

# Test table-counts endpoint
echo "üìä Testing table-counts endpoint..."
echo "curl -X GET \"$API_BASE/table-counts\""
echo ""

echo "üîç Testing smart import detection cho t·ª´ng b·∫£ng:"
echo "================================================="

# Test cases v·ªõi filename patterns
declare -a test_files=(
    "7800_dp01_20241231.csv"
    "7800_dpda_20250131.csv"
    "7800_ei01_20241130.csv"
    "7800_ln01_20241231.csv"
    "7800_ln03_20241231.csv"
    "7800_gl01_20241231.csv"
    "7800_gl02_20241231.csv"
    "7800_gl41_20241231.csv"
    "7800_rr01_20241231.csv"
)

for filename in "${test_files[@]}"
do
    table_code=$(echo "$filename" | sed -n 's/.*_\([^_]*\)_[0-9]*.csv/\1/p' | tr '[:lower:]' '[:upper:]')
    echo "üéØ Testing $table_code detection:"
    echo "   Filename: $filename"
    echo "   Expected DataType: $table_code"
    echo "   curl -X POST \"$API_BASE/smart\" \\"
    echo "        -H \"Content-Type: multipart/form-data\" \\"
    echo "        -F \"file=@$filename\""
    echo ""
done

echo "‚úÖ All 9 tables supported!"
echo ""
echo "üîß NEXT STEPS:"
echo "=============="
echo "1. T·∫°o sample CSV files cho testing"
echo "2. Start backend API server"
echo "3. Run actual API tests"
echo "4. Verify database records"
echo ""
echo "üí° DirectImportController endpoints:"
echo "   POST /api/DirectImport/smart - Smart import v·ªõi auto-detection"
echo "   GET  /api/DirectImport/table-counts - L·∫•y s·ªë records c·ªßa c√°c b·∫£ng"
