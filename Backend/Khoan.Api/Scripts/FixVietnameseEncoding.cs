using Microsoft.EntityFrameworkCore;
using Khoan.Api.Data;
using Khoan.Api.Models;

namespace Khoan.Api.Scripts;

public static class FixVietnameseEncoding
{
    public static void FixKpiIndicatorNames(ApplicationDbContext context)
    {
        Console.WriteLine("üîß Starting Vietnamese encoding fix for KPI Indicators...");

        var indicators = context.KpiIndicators.ToList();
        int fixedCount = 0;

        // Dictionary to fix common corrupted Vietnamese characters
        var encodingFixes = new Dictionary<string, string>
        {
            { "T?ng ngu?n v?n cu?i k?", "T·ªïng ngu·ªìn v·ªën cu·ªëi k·ª≥" },
            { "T?ng ngu?n v?n huy d?ng BQ trong k?", "T·ªïng ngu·ªìn v·ªën huy ƒë·ªông BQ trong k·ª≥" },
            { "T?ng du n? cu?i k?", "T·ªïng d∆∞ n·ª£ cu·ªëi k·ª≥" },
            { "T?ng du n? BQ trong k?", "T·ªïng d∆∞ n·ª£ BQ trong k·ª≥" },
            { "T?ng du n? HSX&CN", "T·ªïng d∆∞ n·ª£ HSX&CN" },
            { "T? l? n? x?u n?i b?ng", "T·ª∑ l·ªá n·ª£ x·∫•u n·ªôi b·∫£ng" },
            { "Thu n? d√£ XLRR", "Thu n·ª£ ƒë√£ XLRR" },
            { "Ph√°t tri?n Kh√°ch h√†ng", "Ph√°t tri·ªÉn Kh√°ch h√†ng" },
            { "L?i nhu?n kho√°n t√†i ch√≠nh", "L·ª£i nhu·∫≠n kho√°n t√†i ch√≠nh" },
            { "T?ng ngu?n v?n huy d?ng BQ", "T·ªïng ngu·ªìn v·ªën huy ƒë·ªông BQ" },
            { "T?ng ngu?n v?n BQ", "T·ªïng ngu·ªìn v·ªën BQ" },
            { "T?ng ngu?n v?n", "T·ªïng ngu·ªìn v·ªën" },
            { "T?ng du n?", "T·ªïng d∆∞ n·ª£" },
            { "L?i nhu?n", "L·ª£i nhu·∫≠n" },
            { "Thu n?", "Thu n·ª£" },
            { "N? x?u", "N·ª£ x·∫•u" },
            { "Ph√°t tri?n", "Ph√°t tri·ªÉn" },
            { "Qu?n l?", "Qu·∫£n l√Ω" },
            { "Chi ti?t", "Chi ti·∫øt" },
            { "T?ng h?p", "T·ªïng h·ª£p" },
            { "B?o c√°o", "B√°o c√°o" },
            { "C√°n b?", "C√°n b·ªô" },
            { "Qu? tr√¨nh", "Qu√° tr√¨nh" },
            { "Gi?i ph√°p", "Gi·∫£i ph√°p" },
            { "Chi nh√°nh", "Chi nh√°nh" }, // This should already be correct
            { "K? ho?ch", "K·∫ø ho·∫°ch" },
            { "Th?c hi?n", "Th·ª±c hi·ªán" },
            { "Doanh s?", "Doanh s·ªë" },
            { "Thu nh?p", "Thu nh·∫≠p" },
            { "Ch?t l??ng", "Ch·∫•t l∆∞·ª£ng" },
            { "Hi?u qu?", "Hi·ªáu qu·∫£" },
            // Additional common fixes
            { "?", "·ªë" }, // Handle individual character fixes if needed
            { "?", "·ª£" },
            { "?", "·ªß" },
            { "?", "·ªÅ" },
            { "?", "·ªã" },
            { "?", "·ªØ" },
            { "?", "·∫≠" },
            { "?", "·∫π" },
            { "?", "≈©" },
            { "?", "·∫£" },
        };

        foreach (var indicator in indicators)
        {
            var originalName = indicator.IndicatorName;
            var fixedName = originalName;

            // Apply encoding fixes
            foreach (var fix in encodingFixes)
            {
                if (fixedName.Contains(fix.Key))
                {
                    fixedName = fixedName.Replace(fix.Key, fix.Value);
                }
            }

            if (fixedName != originalName)
            {
                Console.WriteLine($"  üî§ Fixing: '{originalName}' ‚Üí '{fixedName}'");
                indicator.IndicatorName = fixedName;
                fixedCount++;
            }
        }

        if (fixedCount > 0)
        {
            context.SaveChanges();
            Console.WriteLine($"‚úÖ Fixed {fixedCount} indicator names with Vietnamese encoding issues");
        }
        else
        {
            Console.WriteLine("‚ÑπÔ∏è No encoding issues found in indicator names");
        }
    }
}
