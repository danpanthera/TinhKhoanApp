-- ========================================
-- üï∞Ô∏è LN03 TEMPORAL TABLE CONVERSION SCRIPT (CORRECTED)
-- ========================================
-- Chuy·ªÉn ƒë·ªïi LN03 t·ª´ b·∫£ng th∆∞·ªùng th√†nh Temporal Table

USE TinhKhoanDB;
GO

PRINT 'üï∞Ô∏è B·∫ÆT ƒê·∫¶U CHUY·ªÇN ƒê·ªîI LN03 TH√ÄNH TEMPORAL TABLE...';

-- ========================================
-- 1. KI·ªÇM TRA TR·∫†NG TH√ÅI HI·ªÜN T·∫†I
-- ========================================
SELECT 
    name,
    temporal_type_desc,
    CASE WHEN temporal_type = 0 THEN 'NON-TEMPORAL' 
         ELSE 'TEMPORAL' END as Status
FROM sys.tables 
WHERE name = 'LN03';

-- ========================================
-- 2. TH√äM C√ÅC C·ªòT TEMPORAL B∆Ø·ªöC T·ª™NG B∆Ø·ªöC
-- ========================================
PRINT 'ƒêang th√™m c·ªôt SysStartTime...';

-- B∆∞·ªõc 1: Th√™m c·ªôt SysStartTime v·ªõi default value
ALTER TABLE LN03 
ADD SysStartTime datetime2 NOT NULL DEFAULT SYSUTCDATETIME();

PRINT 'ƒê√£ th√™m SysStartTime.';

PRINT 'ƒêang th√™m c·ªôt SysEndTime...';

-- B∆∞·ªõc 2: Th√™m c·ªôt SysEndTime v·ªõi max value  
ALTER TABLE LN03 
ADD SysEndTime datetime2 NOT NULL DEFAULT CONVERT(datetime2, '9999-12-31 23:59:59.9999999');

PRINT 'ƒê√£ th√™m SysEndTime.';

-- ========================================
-- 3. T·∫†O PERIOD DEFINITION
-- ========================================
PRINT 'ƒêang t·∫°o Period definition...';

ALTER TABLE LN03 
ADD PERIOD FOR SYSTEM_TIME (SysStartTime, SysEndTime);

PRINT 'ƒê√£ t·∫°o Period definition.';

-- ========================================  
-- 4. S·ª¨A ƒê·ªîI C√ÅC C·ªòT TH√ÄNH GENERATED ALWAYS
-- ========================================
PRINT 'ƒêang chuy·ªÉn ƒë·ªïi c√°c c·ªôt th√†nh Generated Always...';

-- S·ª≠a SysStartTime th√†nh Generated Always
ALTER TABLE LN03 
ALTER COLUMN SysStartTime ADD GENERATED ALWAYS AS ROW START;

-- S·ª≠a SysEndTime th√†nh Generated Always  
ALTER TABLE LN03 
ALTER COLUMN SysEndTime ADD GENERATED ALWAYS AS ROW END;

PRINT 'ƒê√£ chuy·ªÉn ƒë·ªïi c√°c c·ªôt temporal.';

-- ========================================
-- 5. T·∫†O HISTORY TABLE
-- ========================================
PRINT 'ƒêang t·∫°o History table...';

-- T·∫°o b·∫£ng history v·ªõi c√πng structure (tr·ª´ temporal columns s·∫Ω ƒë∆∞·ª£c th√™m t·ª± ƒë·ªông)
CREATE TABLE LN03_History (
    Id int,
    NGAY_DL datetime2,
    MACHINHANH nvarchar(50),
    TENCHINHANH nvarchar(200),
    MAKH nvarchar(200),
    TENKH nvarchar(500),
    MACBTD nvarchar(50),
    TENCBTD nvarchar(200),
    TAIKHOANHACHTOAN nvarchar(20),
    SOHOPDONG nvarchar(100),
    REFNO nvarchar(100),
    NHOMNO nvarchar(50),
    NGAYPHATSINHXL datetime2,
    MAPGD nvarchar(50),
    LOAINGUONVON nvarchar(100),
    DUNONOIBANG decimal(18,2),
    CONLAINGOAIBANG decimal(18,2),
    SOTIENXLRR decimal(18,2),
    COLUMN_18 nvarchar(max),
    COLUMN_19 nvarchar(max),
    COLUMN_20 nvarchar(max),
    THUNOSAUXL decimal(18,2),
    IS_DELETED bit,
    CREATED_DATE datetime2,
    UPDATED_DATE datetime2,
    SysStartTime datetime2 NOT NULL,
    SysEndTime datetime2 NOT NULL
);

-- T·∫°o clustered index cho history table
CREATE CLUSTERED INDEX CIX_LN03_History 
ON LN03_History (SysEndTime, SysStartTime);

PRINT 'ƒê√£ t·∫°o History table.';

-- ========================================
-- 6. ENABLE SYSTEM VERSIONING
-- ========================================
PRINT 'ƒêang b·∫≠t System Versioning...';

ALTER TABLE LN03 
SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE = dbo.LN03_History));

PRINT 'System Versioning ƒë√£ ƒë∆∞·ª£c b·∫≠t!';

-- ========================================
-- 7. KI·ªÇM TRA K·∫æT QU·∫¢
-- ========================================
PRINT '';
PRINT 'Ki·ªÉm tra tr·∫°ng th√°i temporal:';

SELECT 
    t.name AS TableName,
    t.temporal_type_desc AS TemporalType,
    h.name AS HistoryTableName
FROM sys.tables t
LEFT JOIN sys.tables h ON t.history_table_id = h.object_id  
WHERE t.name = 'LN03';

PRINT '';
PRINT 'üéâ TEMPORAL TABLE CONVERSION HO√ÄN TH√ÄNH!';
PRINT 'LN03 b√¢y gi·ªù l√† System-Versioned Temporal Table v·ªõi l·ªãch s·ª≠ t·ª± ƒë·ªông.';

GO
