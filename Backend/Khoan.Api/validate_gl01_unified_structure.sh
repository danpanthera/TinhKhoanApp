#!/bin/bash

echo "üîç GL01 UNIFIED STRUCTURE VALIDATION SCRIPT"
echo "=============================================="

echo ""
echo "üìã REQUIREMENT CHECKLIST - GL01 UNIFIED STRUCTURE (HEAVY FILE OPTIMIZED)"

# 1. Entity Model Check
echo ""
echo "1Ô∏è‚É£  GL01Entity.cs - Entity Model Validation"
echo "--------------------------------------------"

if grep -q "27 business columns" Models/Entities/GL01Entity.cs; then
    echo "‚úÖ GL01Entity.cs c√≥ comment '27 business columns'"
else
    echo "‚ùå GL01Entity.cs thi·∫øu comment '27 business columns'"
fi

if grep -q "HEAVY FILE OPTIMIZED" Models/Entities/GL01Entity.cs; then
    echo "‚úÖ GL01Entity.cs c√≥ comment 'HEAVY FILE OPTIMIZED'"
else
    echo "‚ùå GL01Entity.cs thi·∫øu comment 'HEAVY FILE OPTIMIZED'"
fi

if grep -q "nvarchar(1000)" Models/Entities/GL01Entity.cs; then
    echo "‚úÖ GL01Entity.cs c√≥ REMARK column nvarchar(1000)"
else
    echo "‚ùå GL01Entity.cs thi·∫øu REMARK column nvarchar(1000)"
fi

if grep -q "FileName.*nvarchar(500)" Models/Entities/GL01Entity.cs; then
    echo "‚úÖ GL01Entity.cs c√≥ FileName column nvarchar(500)"
else
    echo "‚ùå GL01Entity.cs thi·∫øu FileName column nvarchar(500)"
fi

if grep -q "ImportBatchId.*nvarchar(100)" Models/Entities/GL01Entity.cs; then
    echo "‚úÖ GL01Entity.cs c√≥ ImportBatchId column nvarchar(100)"
else
    echo "‚ùå GL01Entity.cs thi·∫øu ImportBatchId column nvarchar(100)"
fi

# 2. DataTables Model Check
echo ""
echo "2Ô∏è‚É£  GL01.cs - DataTables Model Validation"
echo "-----------------------------------------"

if grep -q "UNIFIED STRUCTURE - HEAVY FILE OPTIMIZED" Models/DataTables/GL01.cs; then
    echo "‚úÖ GL01.cs c√≥ comment 'UNIFIED STRUCTURE - HEAVY FILE OPTIMIZED'"
else
    echo "‚ùå GL01.cs thi·∫øu comment 'UNIFIED STRUCTURE - HEAVY FILE OPTIMIZED'"
fi

if grep -q "27 Business Columns" Models/DataTables/GL01.cs; then
    echo "‚úÖ GL01.cs c√≥ comment '27 Business Columns'"
else
    echo "‚ùå GL01.cs thi·∫øu comment '27 Business Columns'"
fi

if grep -q "TR_TIME.*datetime2.*Order = 25" Models/DataTables/GL01.cs; then
    echo "‚úÖ GL01.cs c√≥ TR_TIME column Order=25"
else
    echo "‚ùå GL01.cs thi·∫øu TR_TIME column Order=25"
fi

if grep -q "REMARK.*nvarchar(1000)" Models/DataTables/GL01.cs; then
    echo "‚úÖ GL01.cs c√≥ REMARK column nvarchar(1000)"
else
    echo "‚ùå GL01.cs thi·∫øu REMARK column nvarchar(1000)"
fi

# 3. Import Service Heavy File Check
echo ""
echo "3Ô∏è‚É£  DirectImportService.cs - Heavy File Import Validation"
echo "--------------------------------------------------------"

if grep -q "HEAVY FILE OPTIMIZED" Services/DirectImportService.cs; then
    echo "‚úÖ DirectImportService.cs c√≥ comment 'HEAVY FILE OPTIMIZED'"
else
    echo "‚ùå DirectImportService.cs thi·∫øu comment 'HEAVY FILE OPTIMIZED'"
fi

if grep -q "MaxFileSize 2GB" Services/DirectImportService.cs; then
    echo "‚úÖ DirectImportService.cs c√≥ MaxFileSize 2GB validation"
else
    echo "‚ùå DirectImportService.cs thi·∫øu MaxFileSize 2GB validation"
fi

if grep -q "BulkInsertGL01HeavyAsync" Services/DirectImportService.cs; then
    echo "‚úÖ DirectImportService.cs c√≥ BulkInsertGL01HeavyAsync method"
else
    echo "‚ùå DirectImportService.cs thi·∫øu BulkInsertGL01HeavyAsync method"
fi

if grep -q "BATCH_SIZE = 10000" Services/DirectImportService.cs; then
    echo "‚úÖ DirectImportService.cs c√≥ BATCH_SIZE = 10000"
else
    echo "‚ùå DirectImportService.cs thi·∫øu BATCH_SIZE = 10000"
fi

if grep -q "ChangeTracker.Clear()" Services/DirectImportService.cs; then
    echo "‚úÖ DirectImportService.cs c√≥ ChangeTracker.Clear() ƒë·ªÉ free memory"
else
    echo "‚ùå DirectImportService.cs thi·∫øu ChangeTracker.Clear() ƒë·ªÉ free memory"
fi

# 4. Database Schema Check
echo ""
echo "4Ô∏è‚É£  Database Schema Validation"
echo "------------------------------"

if grep -q "CREATE.*INDEX.*GL01.*NGAY_DL" rebuild_tables_csv_structure_correct.sql; then
    echo "‚úÖ Database c√≥ INDEX tr√™n NGAY_DL"
else
    echo "‚ùå Database thi·∫øu INDEX tr√™n NGAY_DL"
fi

if grep -q "COLUMNSTORE" rebuild_tables_csv_structure_correct.sql; then
    echo "‚úÖ Database c√≥ COLUMNSTORE INDEX"
else
    echo "‚ùå Database thi·∫øu COLUMNSTORE INDEX"
fi

# 5. File Naming Policy Check
echo ""
echo "5Ô∏è‚É£  File Naming Policy Validation"
echo "---------------------------------"

if grep -q "only allow filename containing.*gl01" Services/DirectImportService.cs; then
    echo "‚úÖ DirectImportService.cs c√≥ filename validation 'gl01'"
else
    echo "‚ùå DirectImportService.cs thi·∫øu filename validation 'gl01'"
fi

# 6. TR_TIME -> NGAY_DL Mapping Check
echo ""
echo "6Ô∏è‚É£  TR_TIME -> NGAY_DL Mapping Validation"
echo "-----------------------------------------"

if grep -q "TR_TIME.*HasValue" Services/DirectImportService.cs; then
    echo "‚úÖ DirectImportService.cs c√≥ TR_TIME.HasValue check"
else
    echo "‚ùå DirectImportService.cs thi·∫øu TR_TIME.HasValue check"
fi

if grep -q "record.NGAY_DL = record.TR_TIME.Value.Date" Services/DirectImportService.cs; then
    echo "‚úÖ DirectImportService.cs c√≥ TR_TIME -> NGAY_DL mapping"
else
    echo "‚ùå DirectImportService.cs thi·∫øu TR_TIME -> NGAY_DL mapping"
fi

# 7. Build Validation
echo ""
echo "7Ô∏è‚É£  Build Validation"
echo "--------------------"

echo "üî® Building project..."
if dotnet build --configuration Debug --verbosity minimal > /dev/null 2>&1; then
    echo "‚úÖ Project builds successfully"
else
    echo "‚ùå Project build FAILED"
    echo "Run: dotnet build ƒë·ªÉ xem l·ªói chi ti·∫øt"
fi

echo ""
echo "üìä VALIDATION SUMMARY"
echo "===================="
echo ""

# Count passed/failed checks
PASSED=$(grep -c "‚úÖ" <<< "$(bash validate_gl01_unified_structure.sh 2>/dev/null)")
TOTAL=15  # Total expected checks

echo "‚úÖ Passed: $PASSED checks"
echo "üìù Total:  $TOTAL checks"

if [ "$PASSED" -eq "$TOTAL" ]; then
    echo ""
    echo "üéâ GL01 UNIFIED STRUCTURE IMPLEMENTATION: HO√ÄN TH√ÄNH"
    echo "üöÄ Ready for heavy file import testing (~200MB CSV files)"
    echo ""
    echo "Key Features Implemented:"
    echo "‚Ä¢ 27 business columns unified across all layers"
    echo "‚Ä¢ REMARK column as nvarchar(1000)"
    echo "‚Ä¢ Heavy file support (2GB max, 10k batch size)"
    echo "‚Ä¢ TR_TIME (column 25) -> NGAY_DL mapping"
    echo "‚Ä¢ Non-temporal table structure"
    echo "‚Ä¢ Partitioned columnstore indexes"
else
    echo ""
    echo "‚ö†Ô∏è  GL01 UNIFIED STRUCTURE: CH∆ØA HO√ÄN TH√ÄNH"
    echo "‚ùå C·∫ßn fix c√°c issue ·ªü tr√™n tr∆∞·ªõc khi ti·∫øn h√†nh testing"
fi

echo ""
