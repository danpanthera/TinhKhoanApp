// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Khoan.Api.Data;

#nullable disable

namespace Khoan.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250821031744_AddUserAdAndMaCbtdToEmployee")]
    partial class AddUserAdAndMaCbtdToEmployee
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Khoan.Api.Models.Dashboard.BusinessPlanTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("DashboardIndicatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Quarter")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Draft");

                    b.Property<decimal>("TargetValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("DashboardIndicatorId", "UnitId", "Year", "Quarter", "Month")
                        .IsUnique()
                        .HasDatabaseName("IX_BusinessPlanTarget_Unique")
                        .HasFilter("[Quarter] IS NOT NULL AND [Month] IS NOT NULL");

                    b.ToTable("BusinessPlanTargets");
                });

            modelBuilder.Entity("Khoan.Api.Models.Dashboard.DashboardCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AppliedFilters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CalculationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CalculationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("DashboardIndicatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataSource")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<TimeSpan?>("ExecutionTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("Quarter")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Success");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("DashboardIndicatorId", "UnitId", "CalculationDate")
                        .IsUnique()
                        .HasDatabaseName("IX_DashboardCalculation_Unique");

                    b.ToTable("DashboardCalculations");
                });

            modelBuilder.Entity("Khoan.Api.Models.Dashboard.DashboardIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Icon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("DashboardIndicators");
                });

            modelBuilder.Entity("Khoan.Api.Models.DataTables.DP01", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ACCOUNT_STATUS")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ACCOUNT_STATUS");

                    b.Property<decimal?>("ACRUAL_AMOUNT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ACRUAL_AMOUNT");

                    b.Property<decimal?>("ACRUAL_AMOUNT_END")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ACRUAL_AMOUNT_END");

                    b.Property<string>("ADDRESS")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("AUTO_RENEWAL")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("AUTO_RENEWAL");

                    b.Property<DateTime?>("BIRTH_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("BIRTH_DATE");

                    b.Property<string>("CCY")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CCY");

                    b.Property<DateTime?>("CLOSE_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("CLOSE_DATE");

                    b.Property<string>("CONTRACT_COUTS_DAY")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CONTRACT_COUTS_DAY");

                    b.Property<string>("COUNTRY_CODE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("COUNTRY_CODE");

                    b.Property<decimal?>("CRAMT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CRAMT");

                    b.Property<decimal?>("CURRENT_BALANCE")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CURRENT_BALANCE");

                    b.Property<string>("CUST_DETAIL_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CUST_DETAIL_NAME");

                    b.Property<string>("CUST_TYPE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CUST_TYPE");

                    b.Property<string>("CUST_TYPE_DETAIL")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CUST_TYPE_DETAIL");

                    b.Property<string>("CUST_TYPE_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CUST_TYPE_NAME");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("DP_TYPE_CODE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DP_TYPE_CODE");

                    b.Property<string>("DP_TYPE_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DP_TYPE_NAME");

                    b.Property<decimal?>("DRAMT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DRAMT");

                    b.Property<string>("DataSource")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("DataSource");

                    b.Property<string>("EMPLOYEE_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("EMPLOYEE_NAME");

                    b.Property<string>("EMPLOYEE_NUMBER")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("EMPLOYEE_NUMBER");

                    b.Property<string>("FILE_NAME")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("FILE_NAME");

                    b.Property<string>("ID_NUMBER")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ID_NUMBER");

                    b.Property<string>("ISSUED_BY")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ISSUED_BY");

                    b.Property<DateTime?>("ISSUE_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("ISSUE_DATE");

                    b.Property<DateTime>("ImportDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ImportDateTime");

                    b.Property<string>("LOCAL_DISTRICT_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LOCAL_DISTRICT_NAME");

                    b.Property<string>("LOCAL_PROVIN_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LOCAL_PROVIN_NAME");

                    b.Property<string>("LOCAL_WARD_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LOCAL_WARD_NAME");

                    b.Property<DateTime?>("MATURITY_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("MATURITY_DATE");

                    b.Property<string>("MA_CAN_BO_AGRIBANK")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MA_CAN_BO_AGRIBANK");

                    b.Property<string>("MA_CAN_BO_PT")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MA_CAN_BO_PT");

                    b.Property<string>("MA_CN")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MA_CN");

                    b.Property<string>("MA_KH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MA_KH");

                    b.Property<string>("MA_PGD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MA_PGD");

                    b.Property<string>("MONTH_TERM")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MONTH_TERM");

                    b.Property<DateTime?>("NEXT_DP_CAP_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("NEXT_DP_CAP_DATE");

                    b.Property<DateTime?>("NGAY_DL")
                        .HasColumnType("datetime2")
                        .HasColumnName("NGAY_DL");

                    b.Property<string>("NGUOI_GIOI_THIEU")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NGUOI_GIOI_THIEU");

                    b.Property<string>("NGUOI_NUOC_NGOAI")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NGUOI_NUOC_NGOAI");

                    b.Property<string>("NOTENO")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOTENO");

                    b.Property<DateTime?>("OPENING_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("OPENING_DATE");

                    b.Property<string>("PHONG_CAN_BO_PT")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PHONG_CAN_BO_PT");

                    b.Property<DateTime?>("PREVIOUS_DP_CAP_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("PREVIOUS_DP_CAP_DATE");

                    b.Property<string>("QUOC_TICH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("QUOC_TICH");

                    b.Property<decimal?>("RATE")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasColumnName("RATE");

                    b.Property<DateTime?>("RENEW_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("RENEW_DATE");

                    b.Property<string>("SEX_TYPE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SEX_TYPE");

                    b.Property<string>("SO_KY_AD_LSDB")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SO_KY_AD_LSDB");

                    b.Property<string>("SO_TAI_KHOAN")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SO_TAI_KHOAN");

                    b.Property<decimal?>("SPECIAL_RATE")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasColumnName("SPECIAL_RATE");

                    b.Property<string>("STATES_CODE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("STATES_CODE");

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.Property<string>("TAI_KHOAN_HACH_TOAN")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TAI_KHOAN_HACH_TOAN");

                    b.Property<string>("TAX_CODE_LOCATION")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TAX_CODE_LOCATION");

                    b.Property<string>("TELEPHONE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TELEPHONE");

                    b.Property<string>("TEN_CAN_BO_PT")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEN_CAN_BO_PT");

                    b.Property<string>("TEN_KH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEN_KH");

                    b.Property<string>("TEN_NGUOI_GIOI_THIEU")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEN_NGUOI_GIOI_THIEU");

                    b.Property<string>("TEN_PGD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEN_PGD");

                    b.Property<string>("TERM_DP_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TERM_DP_NAME");

                    b.Property<string>("TERM_DP_TYPE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TERM_DP_TYPE");

                    b.Property<string>("TIME_DP_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TIME_DP_NAME");

                    b.Property<string>("TIME_DP_TYPE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TIME_DP_TYPE");

                    b.Property<decimal?>("TYGIA")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasColumnName("TYGIA");

                    b.Property<string>("UNTBUSCD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("UNTBUSCD");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("UpdatedBy");

                    b.Property<string>("ZIP_CODE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ZIP_CODE");

                    b.HasKey("Id");

                    b.HasIndex("MA_CN")
                        .HasDatabaseName("IX_DP01_MA_CN");

                    b.HasIndex("MA_KH")
                        .HasDatabaseName("IX_DP01_MA_KH");

                    b.HasIndex("NGAY_DL")
                        .HasDatabaseName("IX_DP01_NGAY_DL");

                    b.HasIndex("SO_TAI_KHOAN")
                        .HasDatabaseName("IX_DP01_SO_TAI_KHOAN");

                    b.ToTable("DP01", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("DP01_History");
                                ttb
                                    .HasPeriodStart("SysStartTime")
                                    .HasColumnName("SysStartTime");
                                ttb
                                    .HasPeriodEnd("SysEndTime")
                                    .HasColumnName("SysEndTime");
                            }));
                });

            modelBuilder.Entity("Khoan.Api.Models.DataTables.DPDA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnOrder(15);

                    b.Property<string>("FILE_NAME")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FILE_NAME");

                    b.Property<string>("GIAO_THE")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("GIAO_THE")
                        .HasColumnOrder(13);

                    b.Property<string>("LOAI_PHAT_HANH")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LOAI_PHAT_HANH")
                        .HasColumnOrder(14);

                    b.Property<string>("LOAI_THE")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LOAI_THE")
                        .HasColumnOrder(6);

                    b.Property<string>("MA_CHI_NHANH")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MA_CHI_NHANH");

                    b.Property<string>("MA_KHACH_HANG")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MA_KHACH_HANG");

                    b.Property<DateTime>("NGAY_DL")
                        .HasColumnType("datetime2")
                        .HasColumnName("NGAY_DL");

                    b.Property<DateTime?>("NGAY_NOP_DON")
                        .HasColumnType("datetime2")
                        .HasColumnName("NGAY_NOP_DON")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("NGAY_PHAT_HANH")
                        .HasColumnType("datetime2")
                        .HasColumnName("NGAY_PHAT_HANH")
                        .HasColumnOrder(9);

                    b.Property<string>("PHAN_LOAI")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PHAN_LOAI")
                        .HasColumnOrder(12);

                    b.Property<string>("SO_TAI_KHOAN")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SO_TAI_KHOAN")
                        .HasColumnOrder(5);

                    b.Property<string>("SO_THE")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SO_THE")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.Property<string>("TEN_KHACH_HANG")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEN_KHACH_HANG")
                        .HasColumnOrder(4);

                    b.Property<string>("TRANG_THAI")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TRANG_THAI")
                        .HasColumnOrder(11);

                    b.Property<DateTime>("UPDATED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE")
                        .HasColumnOrder(16);

                    b.Property<string>("USER_PHAT_HANH")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("USER_PHAT_HANH")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.HasIndex("NGAY_DL")
                        .HasDatabaseName("IX_DPDA_NGAY_DL");

                    b.ToTable("DPDA", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("DPDA_History");
                                ttb
                                    .HasPeriodStart("SysStartTime")
                                    .HasColumnName("SysStartTime");
                                ttb
                                    .HasPeriodEnd("SysEndTime")
                                    .HasColumnName("SysEndTime");
                            }));
                });

            modelBuilder.Entity("Khoan.Api.Models.DataTables.GL01", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(28);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BUS_CODE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BUS_CODE")
                        .HasColumnOrder(18);

                    b.Property<string>("CCA_USRID")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CCA_USRID")
                        .HasColumnOrder(15);

                    b.Property<string>("COMFIRM")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("COMFIRM")
                        .HasColumnOrder(26);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnOrder(29);

                    b.Property<string>("DEPT_CODE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DEPT_CODE")
                        .HasColumnOrder(24);

                    b.Property<string>("DR_CR")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DR_CR")
                        .HasColumnOrder(12);

                    b.Property<string>("DT_SEQ")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DT_SEQ")
                        .HasColumnOrder(6);

                    b.Property<string>("DYSEQ")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DYSEQ")
                        .HasColumnOrder(4);

                    b.Property<string>("FILE_NAME")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("FILE_NAME")
                        .HasColumnOrder(31);

                    b.Property<string>("LOAI_TIEN")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LOAI_TIEN")
                        .HasColumnOrder(11);

                    b.Property<string>("MA_KH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MA_KH")
                        .HasColumnOrder(13);

                    b.Property<DateTime>("NGAY_DL")
                        .HasColumnType("datetime2")
                        .HasColumnName("NGAY_DL")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("NGAY_GD")
                        .HasColumnType("datetime2")
                        .HasColumnName("NGAY_GD")
                        .HasColumnOrder(2);

                    b.Property<string>("NGUOI_TAO")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NGUOI_TAO")
                        .HasColumnOrder(3);

                    b.Property<string>("POST_BR")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("POST_BR")
                        .HasColumnOrder(10);

                    b.Property<string>("REFERENCE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("REFERENCE")
                        .HasColumnOrder(22);

                    b.Property<string>("REMARK")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("REMARK")
                        .HasColumnOrder(17);

                    b.Property<decimal?>("SO_TIEN_GD")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SO_TIEN_GD")
                        .HasColumnOrder(9);

                    b.Property<string>("STS")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("STS")
                        .HasColumnOrder(1);

                    b.Property<string>("TAI_KHOAN")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TAI_KHOAN")
                        .HasColumnOrder(7);

                    b.Property<string>("TEN_KH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEN_KH")
                        .HasColumnOrder(14);

                    b.Property<string>("TEN_TK")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TEN_TK")
                        .HasColumnOrder(8);

                    b.Property<string>("TRDT_TIME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TRDT_TIME")
                        .HasColumnOrder(27);

                    b.Property<string>("TR_CODE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TR_CODE")
                        .HasColumnOrder(20);

                    b.Property<string>("TR_EX_RT")
                        .HasMaxLength(200)
                        .HasPrecision(18, 6)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TR_EX_RT")
                        .HasColumnOrder(16);

                    b.Property<string>("TR_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TR_NAME")
                        .HasColumnOrder(21);

                    b.Property<string>("TR_TIME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TR_TIME")
                        .HasColumnOrder(25);

                    b.Property<string>("TR_TYPE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TR_TYPE")
                        .HasColumnOrder(5);

                    b.Property<string>("UNIT_BUS_CODE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("UNIT_BUS_CODE")
                        .HasColumnOrder(19);

                    b.Property<DateTime>("UPDATED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE")
                        .HasColumnOrder(30);

                    b.Property<DateTime?>("VALUE_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("VALUE_DATE")
                        .HasColumnOrder(23);

                    b.HasKey("Id");

                    b.ToTable("GL01", (string)null);
                });

            modelBuilder.Entity("Khoan.Api.Models.DataTables.GL02", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(17);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BUSCD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BUSCD")
                        .HasColumnOrder(7);

                    b.Property<string>("CCY")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CCY")
                        .HasColumnOrder(6);

                    b.Property<decimal?>("CRAMOUNT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CRAMOUNT")
                        .HasColumnOrder(15);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnOrder(18);

                    b.Property<DateTime?>("CRTDTM")
                        .HasColumnType("datetime2")
                        .HasColumnName("CRTDTM")
                        .HasColumnOrder(16);

                    b.Property<string>("CUSTOMER")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CUSTOMER")
                        .HasColumnOrder(10);

                    b.Property<decimal?>("DRAMOUNT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DRAMOUNT")
                        .HasColumnOrder(14);

                    b.Property<string>("DYTRSEQ")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DYTRSEQ")
                        .HasColumnOrder(4);

                    b.Property<string>("FILE_NAME")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("FILE_NAME")
                        .HasColumnOrder(20);

                    b.Property<string>("JOURSEQ")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("JOURSEQ")
                        .HasColumnOrder(3);

                    b.Property<string>("LOCAC")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LOCAC")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("NGAY_DL")
                        .HasColumnType("datetime2")
                        .HasColumnName("NGAY_DL")
                        .HasColumnOrder(0);

                    b.Property<string>("REFERENCE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("REFERENCE")
                        .HasColumnOrder(12);

                    b.Property<string>("REMARK")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("REMARK")
                        .HasColumnOrder(13);

                    b.Property<string>("TRBRCD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TRBRCD")
                        .HasColumnOrder(1);

                    b.Property<string>("TRCD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TRCD")
                        .HasColumnOrder(9);

                    b.Property<string>("TRTP")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TRTP")
                        .HasColumnOrder(11);

                    b.Property<string>("UNIT")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("UNIT")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE")
                        .HasColumnOrder(19);

                    b.Property<string>("USERID")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("USERID")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("GL02", (string)null);
                });

            modelBuilder.Entity("Khoan.Api.Models.DataTables.LN01", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasColumnOrder(81);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("ACCRUAL_AMOUNT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ACCRUAL_AMOUNT")
                        .HasColumnOrder(55);

                    b.Property<decimal?>("ACCRUAL_AMOUNT_END_OF_MONTH")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ACCRUAL_AMOUNT_END_OF_MONTH")
                        .HasColumnOrder(56);

                    b.Property<string>("ADDR1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ADDR1")
                        .HasColumnOrder(37);

                    b.Property<string>("AN_HAN_LAI")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("AN_HAN_LAI")
                        .HasColumnOrder(68);

                    b.Property<decimal?>("APPRAMT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("APPRAMT")
                        .HasColumnOrder(19);

                    b.Property<DateTime?>("APPRDT")
                        .HasColumnType("datetime2")
                        .HasColumnName("APPRDT")
                        .HasColumnOrder(17);

                    b.Property<DateTime?>("APPRMATDT")
                        .HasColumnType("datetime2")
                        .HasColumnName("APPRMATDT")
                        .HasColumnOrder(20);

                    b.Property<string>("APPRSEQ")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("APPRSEQ")
                        .HasColumnOrder(16);

                    b.Property<string>("APPR_CCY")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("APPR_CCY")
                        .HasColumnOrder(18);

                    b.Property<string>("BRCD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BRCD")
                        .HasColumnOrder(2);

                    b.Property<string>("BSNSSCLTPCD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BSNSSCLTPCD")
                        .HasColumnOrder(53);

                    b.Property<string>("BSRTCD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BSRTCD")
                        .HasColumnOrder(14);

                    b.Property<string>("BUSCD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BUSCD")
                        .HasColumnOrder(52);

                    b.Property<string>("CCY")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CCY")
                        .HasColumnOrder(6);

                    b.Property<string>("CHITIEU")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CHITIEU")
                        .HasColumnOrder(62);

                    b.Property<string>("CMT_HC")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CMT_HC")
                        .HasColumnOrder(75);

                    b.Property<string>("COMMCD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("COMMCD")
                        .HasColumnOrder(42);

                    b.Property<string>("CREDIT_LINE_YPE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CREDIT_LINE_YPE")
                        .HasColumnOrder(64);

                    b.Property<string>("CTCV")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CTCV")
                        .HasColumnOrder(63);

                    b.Property<string>("CUSTNM")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CUSTNM")
                        .HasColumnOrder(4);

                    b.Property<string>("CUSTOMER_TYPE_CODE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CUSTOMER_TYPE_CODE")
                        .HasColumnOrder(33);

                    b.Property<string>("CUSTOMER_TYPE_CODE_DETAIL")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CUSTOMER_TYPE_CODE_DETAIL")
                        .HasColumnOrder(34);

                    b.Property<string>("CUSTSEQ")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CUSTSEQ")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnOrder(83);

                    b.Property<decimal?>("DISBURSEMENT_AMOUNT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DISBURSEMENT_AMOUNT")
                        .HasColumnOrder(12);

                    b.Property<string>("DISBUR_CCY")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DISBUR_CCY")
                        .HasColumnOrder(11);

                    b.Property<string>("DISTRICT")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DISTRICT")
                        .HasColumnOrder(40);

                    b.Property<DateTime?>("DSBSDT")
                        .HasColumnType("datetime2")
                        .HasColumnName("DSBSDT")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("DSBSMATDT")
                        .HasColumnType("datetime2")
                        .HasColumnName("DSBSMATDT")
                        .HasColumnOrder(13);

                    b.Property<string>("DSBSSEQ")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DSBSSEQ")
                        .HasColumnOrder(8);

                    b.Property<decimal?>("DU_NO")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DU_NO")
                        .HasColumnOrder(7);

                    b.Property<string>("EXEMPTINT")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("EXEMPTINT")
                        .HasColumnOrder(48);

                    b.Property<decimal?>("EXEMPTINTAMT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("EXEMPTINTAMT")
                        .HasColumnOrder(50);

                    b.Property<string>("EXEMPTINTTYPE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("EXEMPTINTTYPE")
                        .HasColumnOrder(49);

                    b.Property<string>("FILE_NAME")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("FILE_NAME")
                        .HasColumnOrder(82);

                    b.Property<string>("FUND_PURPOSE_CODE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("FUND_PURPOSE_CODE")
                        .HasColumnOrder(23);

                    b.Property<string>("FUND_RESOURCE_CODE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("FUND_RESOURCE_CODE")
                        .HasColumnOrder(22);

                    b.Property<string>("GRPNO")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("GRPNO")
                        .HasColumnOrder(51);

                    b.Property<string>("INTCMTH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("INTCMTH")
                        .HasColumnOrder(57);

                    b.Property<decimal?>("INTEREST_AMOUNT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("INTEREST_AMOUNT")
                        .HasColumnOrder(30);

                    b.Property<decimal?>("INTEREST_RATE")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("INTEREST_RATE")
                        .HasColumnOrder(15);

                    b.Property<string>("INTRPYMTH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("INTRPYMTH")
                        .HasColumnOrder(58);

                    b.Property<string>("INTTRMMTH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("INTTRMMTH")
                        .HasColumnOrder(59);

                    b.Property<string>("INT_LUMPSUM_PARTIAL_TYPE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("INT_LUMPSUM_PARTIAL_TYPE")
                        .HasColumnOrder(65);

                    b.Property<string>("INT_PARTIAL_PAYMENT_TYPE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("INT_PARTIAL_PAYMENT_TYPE")
                        .HasColumnOrder(66);

                    b.Property<string>("INT_PAYMENT_INTERVAL")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("INT_PAYMENT_INTERVAL")
                        .HasColumnOrder(67);

                    b.Property<DateTime?>("LAST_INT_CHARGE_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("LAST_INT_CHARGE_DATE")
                        .HasColumnOrder(47);

                    b.Property<DateTime?>("LAST_REPAY_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("LAST_REPAY_DATE")
                        .HasColumnOrder(44);

                    b.Property<string>("LCLDISTNM")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LCLDISTNM")
                        .HasColumnOrder(41);

                    b.Property<string>("LCLPROVINNM")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LCLPROVINNM")
                        .HasColumnOrder(39);

                    b.Property<string>("LCLWARDNM")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LCLWARDNM")
                        .HasColumnOrder(43);

                    b.Property<string>("LOAN_TYPE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LOAN_TYPE")
                        .HasColumnOrder(21);

                    b.Property<string>("MA_CB_AGRI")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MA_CB_AGRI")
                        .HasColumnOrder(77);

                    b.Property<string>("MA_NGANH_KT")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MA_NGANH_KT")
                        .HasColumnOrder(78);

                    b.Property<DateTime?>("NEXT_INT_REPAY_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("NEXT_INT_REPAY_DATE")
                        .HasColumnOrder(27);

                    b.Property<decimal?>("NEXT_REPAY_AMOUNT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("NEXT_REPAY_AMOUNT")
                        .HasColumnOrder(26);

                    b.Property<DateTime?>("NEXT_REPAY_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("NEXT_REPAY_DATE")
                        .HasColumnOrder(25);

                    b.Property<DateTime?>("NGAY_DL")
                        .HasColumnType("datetime2")
                        .HasColumnName("NGAY_DL")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("NGAY_SINH")
                        .HasColumnType("datetime2")
                        .HasColumnName("NGAY_SINH")
                        .HasColumnOrder(76);

                    b.Property<string>("NHOM_NO")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NHOM_NO")
                        .HasColumnOrder(46);

                    b.Property<string>("OFFICER_ID")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("OFFICER_ID")
                        .HasColumnOrder(28);

                    b.Property<string>("OFFICER_IPCAS")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("OFFICER_IPCAS")
                        .HasColumnOrder(80);

                    b.Property<string>("OFFICER_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("OFFICER_NAME")
                        .HasColumnOrder(29);

                    b.Property<decimal?>("PASTDUE_INTEREST_AMOUNT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PASTDUE_INTEREST_AMOUNT")
                        .HasColumnOrder(31);

                    b.Property<string>("PHUONG_THUC_GIAI_NGAN_1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PHUONG_THUC_GIAI_NGAN_1")
                        .HasColumnOrder(69);

                    b.Property<string>("PHUONG_THUC_GIAI_NGAN_2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PHUONG_THUC_GIAI_NGAN_2")
                        .HasColumnOrder(72);

                    b.Property<string>("PROVINCE")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("PROVINCE")
                        .HasColumnOrder(38);

                    b.Property<string>("REMARK")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("REMARK")
                        .HasColumnOrder(61);

                    b.Property<decimal?>("REPAYMENT_AMOUNT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("REPAYMENT_AMOUNT")
                        .HasColumnOrder(24);

                    b.Property<string>("SECURED_PERCENT")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SECURED_PERCENT")
                        .HasColumnOrder(45);

                    b.Property<decimal?>("SO_TIEN_GIAI_NGAN_1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SO_TIEN_GIAI_NGAN_1")
                        .HasColumnOrder(71);

                    b.Property<decimal?>("SO_TIEN_GIAI_NGAN_2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SO_TIEN_GIAI_NGAN_2")
                        .HasColumnOrder(74);

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.Property<string>("TAI_KHOAN")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TAI_KHOAN")
                        .HasColumnOrder(5);

                    b.Property<string>("TAI_KHOAN_GIAI_NGAN_1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TAI_KHOAN_GIAI_NGAN_1")
                        .HasColumnOrder(70);

                    b.Property<string>("TAI_KHOAN_GIAI_NGAN_2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TAI_KHOAN_GIAI_NGAN_2")
                        .HasColumnOrder(73);

                    b.Property<decimal?>("TOTAL_INTEREST_REPAY_AMOUNT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL_INTEREST_REPAY_AMOUNT")
                        .HasColumnOrder(32);

                    b.Property<DateTime?>("TRANSACTION_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("TRANSACTION_DATE")
                        .HasColumnOrder(9);

                    b.Property<string>("TRCTCD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TRCTCD")
                        .HasColumnOrder(35);

                    b.Property<string>("TRCTNM")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TRCTNM")
                        .HasColumnOrder(36);

                    b.Property<decimal?>("TY_GIA")
                        .HasPrecision(10, 6)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TY_GIA")
                        .HasColumnOrder(79);

                    b.Property<string>("USRIDOP")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("USRIDOP")
                        .HasColumnOrder(54);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE")
                        .HasColumnOrder(84);

                    b.Property<string>("YRDAYS")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("YRDAYS")
                        .HasColumnOrder(60);

                    b.HasKey("Id");

                    b.HasIndex("NGAY_DL")
                        .HasDatabaseName("IX_LN01_NGAY_DL");

                    b.ToTable("LN01", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("LN01_History");
                                ttb
                                    .HasPeriodStart("SysStartTime")
                                    .HasColumnName("SysStartTime");
                                ttb
                                    .HasPeriodEnd("SysEndTime")
                                    .HasColumnName("SysEndTime");
                            }));
                });

            modelBuilder.Entity("Khoan.Api.Models.DataTables.LN03", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CONLAINGOAIBANG")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(10);

                    b.Property<string>("CREATED_BY")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(23);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(24);

                    b.Property<string>("Column18")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("MALOAI")
                        .HasColumnOrder(20);

                    b.Property<string>("Column19")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LOAIKHACHHANG")
                        .HasColumnOrder(21);

                    b.Property<decimal?>("Column20")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SOTIEN")
                        .HasColumnOrder(22);

                    b.Property<decimal?>("DUNONOIBANG")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(12);

                    b.Property<string>("FILE_ORIGIN")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(25);

                    b.Property<string>("LOAINGUONVON")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(19);

                    b.Property<string>("MACBTD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(14);

                    b.Property<string>("MACHINHANH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(2);

                    b.Property<string>("MAKH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(4);

                    b.Property<string>("MAPGD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(16);

                    b.Property<DateTime?>("NGAYPHATSINHXL")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("NGAY_DL")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<string>("NHOMNO")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(13);

                    b.Property<string>("REFNO")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(18);

                    b.Property<string>("SOHOPDONG")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(6);

                    b.Property<decimal?>("SOTIENXLRR")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.Property<string>("TAIKHOANHACHTOAN")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(17);

                    b.Property<string>("TENCBTD")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(15);

                    b.Property<string>("TENCHINHANH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(3);

                    b.Property<string>("TENKH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(5);

                    b.Property<decimal?>("THUNOSAUXL")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(9);

                    b.HasKey("Id");

                    b.HasIndex("NGAY_DL")
                        .HasDatabaseName("IX_LN03_NGAY_DL");

                    b.ToTable("LN03", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("LN03_History");
                                ttb
                                    .HasPeriodStart("SysStartTime")
                                    .HasColumnName("SysStartTime");
                                ttb
                                    .HasPeriodEnd("SysEndTime")
                                    .HasColumnName("SysEndTime");
                            }));
                });

            modelBuilder.Entity("Khoan.Api.Models.DataTables.RR01", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("BDS")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(24);

                    b.Property<string>("BRCD")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(3);

                    b.Property<string>("CCY")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(7);

                    b.Property<string>("CN_LOAI_I")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2(3)");

                    b.Property<decimal?>("DOC_DAUKY_DA_THU_HT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(16);

                    b.Property<decimal?>("DS")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(25);

                    b.Property<decimal?>("DUNO_DAI_HAN")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(21);

                    b.Property<decimal?>("DUNO_GOC_BAN_DAU")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(14);

                    b.Property<decimal?>("DUNO_GOC_HIENTAI")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(17);

                    b.Property<decimal?>("DUNO_LAI_HIENTAI")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(18);

                    b.Property<decimal?>("DUNO_LAI_TICHLUY_BD")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(15);

                    b.Property<decimal?>("DUNO_NGAN_HAN")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(19);

                    b.Property<decimal?>("DUNO_TRUNG_HAN")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(20);

                    b.Property<string>("FILE_NAME")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LOAI_KH")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(9);

                    b.Property<string>("MA_KH")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("NGAY_DEN_HAN")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(11);

                    b.Property<DateTime>("NGAY_DL")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("NGAY_GIAI_NGAN")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("NGAY_XLRR")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(13);

                    b.Property<string>("SO_LAV")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(8);

                    b.Property<string>("SO_LDS")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.Property<string>("TEN_KH")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(5);

                    b.Property<decimal?>("THU_GOC")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(22);

                    b.Property<decimal?>("THU_LAI")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(23);

                    b.Property<decimal?>("TSK")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(26);

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("VAMC_FLG")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(12);

                    b.HasKey("Id");

                    b.HasIndex("NGAY_DL")
                        .HasDatabaseName("IX_RR01_NGAY_DL");

                    b.ToTable("RR01", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("RR01_History");
                                ttb
                                    .HasPeriodStart("SysStartTime")
                                    .HasColumnName("SysStartTime");
                                ttb
                                    .HasPeriodEnd("SysEndTime")
                                    .HasColumnName("SysEndTime");
                            }));
                });

            modelBuilder.Entity("Khoan.Api.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CBCode")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("IsActive");

                    b.Property<string>("MaCBTD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UserAD")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserIPCAS")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("UnitId");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeAuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FieldChanged")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PerformedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PerformedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeAuditLogs");
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeKhoanAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("KhoanPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("KhoanPeriodId");

                    b.ToTable("EmployeeKhoanAssignments");
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeKhoanAssignmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeKhoanAssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("LegacyKPICode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegacyKPIName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Score")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TargetValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeKhoanAssignmentId");

                    b.ToTable("EmployeeKhoanAssignmentDetails");
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeKpiAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("KhoanPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("KpiDefinitionId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TargetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("KhoanPeriodId");

                    b.HasIndex("KpiDefinitionId");

                    b.ToTable("EmployeeKpiAssignments");
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeKpiTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("IndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("KhoanPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("Score")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TargetValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("IndicatorId");

                    b.HasIndex("KhoanPeriodId");

                    b.ToTable("EmployeeKpiTargets");
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeRole", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmployeeRoles");
                });

            modelBuilder.Entity("Khoan.Api.Models.Entities.EI01Entity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOAI_KH")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MA_CN")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MA_KH")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("NGAY_DK_EMB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NGAY_DK_LN")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NGAY_DK_OTT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NGAY_DK_SAV")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NGAY_DK_SMS")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NGAY_DL")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT_EMB")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SDT_LN")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SDT_OTT")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SDT_SAV")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SDT_SMS")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("SysEndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ValidTo");

                    b.Property<DateTime>("SysStartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ValidFrom");

                    b.Property<string>("TEN_KH")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TRANG_THAI_EMB")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TRANG_THAI_LN")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TRANG_THAI_OTT")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TRANG_THAI_SAV")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TRANG_THAI_SMS")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("USER_EMB")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("USER_LN")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("USER_OTT")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("USER_SAV")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("USER_SMS")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidFrom")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ValidFrom");

                    b.Property<DateTime>("ValidTo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ValidTo");

                    b.HasKey("Id");

                    b.HasIndex("MA_CN")
                        .HasDatabaseName("IX_EI01_MA_CN");

                    b.HasIndex("NGAY_DL")
                        .HasDatabaseName("IX_EI01_NGAY_DL");

                    b.HasIndex("NGAY_DL", "MA_CN")
                        .HasDatabaseName("NCCI_EI01_Analytics");

                    b.HasIndex(new[] { "MA_CN" }, "IX_EI01_MA_CN");

                    b.HasIndex(new[] { "MA_KH" }, "IX_EI01_MA_KH");

                    b.HasIndex(new[] { "NGAY_DL" }, "IX_EI01_NGAY_DL");

                    b.HasIndex(new[] { "TEN_KH" }, "IX_EI01_TEN_KH");

                    b.ToTable("EI01", t =>
                        {
                            t.Property("ValidFrom")
                                .HasColumnName("ValidFrom1");

                            t.Property("ValidTo")
                                .HasColumnName("ValidTo1");
                        });

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("EI01_History");
                                ttb
                                    .HasPeriodStart("ValidFrom")
                                    .HasColumnName("ValidFrom");
                                ttb
                                    .HasPeriodEnd("ValidTo")
                                    .HasColumnName("ValidTo");
                            }));
                });

            modelBuilder.Entity("Khoan.Api.Models.Entities.GL41Entity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DC_CUOIKY")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DC_DAUKY")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DN_CUOIKY")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DN_DAUKY")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FILE_NAME")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LOAI_BT")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LOAI_TIEN")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MA_CN")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MA_TK")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("NGAY_DL")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("SBT_CO")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SBT_NO")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ST_GHICO")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ST_GHINO")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TEN_TK")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NGAY_DL", "MA_CN", "MA_TK")
                        .HasDatabaseName("NCCI_GL41_Analytics");

                    b.ToTable("GL41");
                });

            modelBuilder.Entity("Khoan.Api.Models.FinalPayout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CompletionFactor")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("KhoanPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("V1")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("V2")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("KhoanPeriodId");

                    b.ToTable("FinalPayouts");
                });

            modelBuilder.Entity("Khoan.Api.Models.ImportedDataRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("OriginalFileData")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RecordsCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StatementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ImportedDataRecords");
                });

            modelBuilder.Entity("Khoan.Api.Models.KPIDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("KpiCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KpiName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("MaxScore")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ValueType")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("KPIDefinitions");
                });

            modelBuilder.Entity("Khoan.Api.Models.KhoanPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("KhoanPeriods");
                });

            modelBuilder.Entity("Khoan.Api.Models.KpiAssignmentTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TableType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("KpiAssignmentTables");
                });

            modelBuilder.Entity("Khoan.Api.Models.KpiIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IndicatorName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxScore")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ValueType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("KpiIndicators");
                });

            modelBuilder.Entity("Khoan.Api.Models.KpiScoringRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BonusPoints")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("KpiIndicatorName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("MaxValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PenaltyPoints")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RuleType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("COMPLETION_RATE");

                    b.Property<string>("ScoreFormula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KpiIndicatorName")
                        .HasDatabaseName("IX_KpiScoringRules_IndicatorName");

                    b.ToTable("KpiScoringRules");
                });

            modelBuilder.Entity("Khoan.Api.Models.MSIT72_TSBD", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImportedDataRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessedData")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("RawData")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<DateTime>("SysEndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.HasKey("Id");

                    b.HasIndex("ImportedDataRecordId");

                    b.ToTable("MSIT72_TSBD");
                });

            modelBuilder.Entity("Khoan.Api.Models.MSIT72_TSGH", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImportedDataRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessedData")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("RawData")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<DateTime>("SysEndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.HasKey("Id");

                    b.HasIndex("ImportedDataRecordId");

                    b.ToTable("MSIT72_TSGH");
                });

            modelBuilder.Entity("Khoan.Api.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawData.DPDAHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DataHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("HanMucThe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImportId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("LoaiThe")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaChiNhanh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayPhatHanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<decimal?>("SoDuHienTai")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SoThe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SoTienDaSD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StatementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChiNhanh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenKhachHang")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TrangThaiThe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DPDA_History");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawData.EI01History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Channel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DataHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DeviceInfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("LoaiGiaoDich")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaChiNhanh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaGiaoDich")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayGiaoDich")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungGiaoDich")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<string>("SoTaiKhoan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StatementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChiNhanh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenKhachHang")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ThoiGianGiaoDich")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThaiGiaoDich")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EI01_History");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawData.GAHR26_History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ADDRESS")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ADDRESS");

                    b.Property<decimal?>("ALLOWANCE")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ALLOWANCE");

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BASIC_SALARY")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("BASIC_SALARY");

                    b.Property<DateTime?>("BIRTH_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("BIRTH_DATE");

                    b.Property<string>("BRANCH_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BRCD")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BRCD");

                    b.Property<string>("BusinessKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CREATED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("DEPARTMENT")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DEPARTMENT");

                    b.Property<string>("DataHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EMAIL")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("EMP_ID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMP_ID");

                    b.Property<string>("EMP_NAME")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("EMP_NAME");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GENDER")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("GENDER");

                    b.Property<string>("ID_NUMBER")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ID_NUMBER");

                    b.Property<string>("ImportId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JOIN_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("JOIN_DATE");

                    b.Property<string>("PHONE")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PHONE");

                    b.Property<string>("POSITION")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("POSITION");

                    b.Property<DateTime>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<string>("STATUS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("StatementDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("Id");

                    b.ToTable("GAHR26_History");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawData.GL01History", b =>
                {
                    b.Property<long>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoryID"));

                    b.Property<string>("ALTKT")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AUGBL")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AUGCP")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("AUGDT")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("BELNR")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BEWAR")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("BSCHL")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("BUKRS")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("BUZEI")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("BVTYP")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DMBE2")
                        .HasColumnType("decimal(13,2)");

                    b.Property<decimal?>("DMBE3")
                        .HasColumnType("decimal(13,2)");

                    b.Property<decimal?>("DMBTR")
                        .HasColumnType("decimal(13,2)");

                    b.Property<string>("EMPFB")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("FDGRP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FDLEV")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("FILKD")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("FWBAS")
                        .HasColumnType("decimal(13,2)");

                    b.Property<decimal?>("FWSTE")
                        .HasColumnType("decimal(13,2)");

                    b.Property<string>("GJAHR")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("GSBER")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("GVTYP")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("HBKID")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("HKONT")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("HWBAS")
                        .HasColumnType("decimal(13,2)");

                    b.Property<decimal?>("HWSTE")
                        .HasColumnType("decimal(13,2)");

                    b.Property<string>("HZUON")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("KKBER")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("KOART")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("KOST1")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("KOST2")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("KUNNR")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("KZBTR")
                        .HasColumnType("decimal(13,2)");

                    b.Property<string>("LIFNR")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MANDT")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("MWART")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("MWSKZ")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal?>("MWSTS")
                        .HasColumnType("decimal(13,2)");

                    b.Property<decimal?>("MWSTV")
                        .HasColumnType("decimal(13,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("NEBTR")
                        .HasColumnType("decimal(13,2)");

                    b.Property<string>("PARGB")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("POSN2")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("PPRCT")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<decimal?>("PSWBT")
                        .HasColumnType("decimal(13,2)");

                    b.Property<string>("PSWSL")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("QSSKZ")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("RecordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SGTXT")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SHKZG")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal?>("SKFBT")
                        .HasColumnType("decimal(13,2)");

                    b.Property<decimal?>("SKNTO")
                        .HasColumnType("decimal(13,2)");

                    b.Property<string>("STBLG")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("STGRD")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("SourceID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TXBFW")
                        .HasColumnType("decimal(13,2)");

                    b.Property<decimal?>("TXBHW")
                        .HasColumnType("decimal(13,2)");

                    b.Property<string>("UMSKS")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("UMSKZ")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("VALUT")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("VBEL2")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("VBUND")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("VORGN")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("WRBTR")
                        .HasColumnType("decimal(13,2)");

                    b.Property<decimal?>("WSKTO")
                        .HasColumnType("decimal(13,2)");

                    b.Property<string>("XBILK")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("XREF1")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("XREF2")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("ZBD1P")
                        .HasColumnType("decimal(5,3)");

                    b.Property<int?>("ZBD1T")
                        .HasColumnType("int");

                    b.Property<decimal?>("ZBD2P")
                        .HasColumnType("decimal(5,3)");

                    b.Property<int?>("ZBD2T")
                        .HasColumnType("int");

                    b.Property<int?>("ZBD3T")
                        .HasColumnType("int");

                    b.Property<string>("ZBFIX")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ZFBDT")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("ZINKZ")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ZLSCH")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ZLSPR")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ZTERM")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("ZUMSK")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ZUONR")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("HistoryID");

                    b.ToTable("GL01_History");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawData.GL41_History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ACCOUNT_NAME")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ACCOUNT_NAME");

                    b.Property<string>("ACCOUNT_NO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCOUNT_NO");

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BRANCH_NAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<string>("BRCD")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BRCD");

                    b.Property<string>("BusinessKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CREATED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<decimal?>("CREDIT_AMOUNT")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CREDIT_AMOUNT");

                    b.Property<decimal?>("CREDIT_BALANCE")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CREDIT_BALANCE");

                    b.Property<string>("CUSTOMER_ID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CUSTOMER_ID");

                    b.Property<string>("CUSTOMER_NAME")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CUSTOMER_NAME");

                    b.Property<decimal?>("DEBIT_AMOUNT")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DEBIT_AMOUNT");

                    b.Property<decimal?>("DEBIT_BALANCE")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DEBIT_BALANCE");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("DataHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("JOURNAL_NO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JOURNAL_NO");

                    b.Property<string>("ORIGINAL_TRANS_ID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORIGINAL_TRANS_ID");

                    b.Property<DateTime?>("POSTING_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("POSTING_DATE");

                    b.Property<DateTime>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RawDataJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatementDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TRANSACTION_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("TRANSACTION_DATE");

                    b.Property<string>("TRANSACTION_TYPE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TRANSACTION_TYPE");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("Id");

                    b.ToTable("GL41_History");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawData.LN01History", b =>
                {
                    b.Property<long>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoryID"));

                    b.Property<string>("ADRNR")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BUKRS")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FIKRS")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("KOKFI")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("KTOPL")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("LAND1")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("MANDT")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PERIV")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("RCOMP")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("RecordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPRAS")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("STCEG")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SourceID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TXJCD")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.Property<string>("WAABW")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("WAERS")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("XFMCA")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("XFMCB")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("XFMCO")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("HistoryID");

                    b.ToTable("LN01_History");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawData.LN01_History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BRCD")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BRCD");

                    b.Property<string>("BusinessKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CCY")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("CCY");

                    b.Property<string>("CUSTNM")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CUSTNM");

                    b.Property<string>("CUSTSEQ")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CUSTSEQ");

                    b.Property<decimal?>("DISBURSEMENT_AMOUNT")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DISBURSEMENT_AMOUNT");

                    b.Property<string>("DISBUR_CCY")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("DISBUR_CCY");

                    b.Property<DateTime?>("DSBSDT")
                        .HasColumnType("datetime2")
                        .HasColumnName("DSBSDT");

                    b.Property<string>("DSBSSEQ")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DSBSSEQ");

                    b.Property<decimal?>("DU_NO")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DU_NO");

                    b.Property<string>("DataHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RawDataJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TAI_KHOAN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TAI_KHOAN");

                    b.Property<DateTime?>("TRANSACTION_DATE")
                        .HasColumnType("datetime2")
                        .HasColumnName("TRANSACTION_DATE");

                    b.HasKey("Id");

                    b.ToTable("LN01_CsvHistory");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawData.LN03History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DataHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("LoaiHopDong")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaChiNhanh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaHopDong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayDaoHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NhomNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowVersion")
                        .HasColumnType("int");

                    b.Property<decimal?>("SoTienGoc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SoTienLai")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StatementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChiNhanh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenKhachHang")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TinhTrangNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("TongNo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("LN03_History");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawDataImport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte[]>("OriginalFileData")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RecordsCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LegacyRawDataImports");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawDataRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("JsonData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessingNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RawDataImportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RawDataImportId");

                    b.ToTable("RawDataRecords");
                });

            modelBuilder.Entity("Khoan.Api.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Khoan.Api.Models.SalaryParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("SalaryParameters");
                });

            modelBuilder.Entity("Khoan.Api.Models.Temporal.ImportLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BatchId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedRecords")
                        .HasColumnType("int");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ErrorCount")
                        .HasColumnType("int");

                    b.Property<string>("ErrorDetails")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImportBatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportSource")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NewRecords")
                        .HasColumnType("int");

                    b.Property<int>("ProcessedRecords")
                        .HasColumnType("int");

                    b.Property<long>("ProcessingTimeMs")
                        .HasColumnType("bigint");

                    b.Property<int>("RecordsCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SuccessCount")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedRecords")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ImportLogs");
                });

            modelBuilder.Entity("Khoan.Api.Models.Temporal.OptimizedRawDataImport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("Achievement")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ImportBatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KpiCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KpiName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("KpiValue")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("Score")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("Target")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OptimizedRawDataImports");
                });

            modelBuilder.Entity("Khoan.Api.Models.Temporal.RawDataImportArchive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("Achievement")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ArchivedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ArchivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("ImportBatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KpiCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("KpiValue")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("Score")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("Target")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RawDataImportArchives");
                });

            modelBuilder.Entity("Khoan.Api.Models.ThuXLRR", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImportedDataRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessedData")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("RawData")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<DateTime>("SysEndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SysEndTime");

                    b.Property<DateTime>("SysStartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SysStartTime");

                    b.HasKey("Id");

                    b.HasIndex("ImportedDataRecordId");

                    b.ToTable("ThuXLRR");
                });

            modelBuilder.Entity("Khoan.Api.Models.TransactionAdjustmentFactor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Factor")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("LegacyKPIDefinitionId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransactionAdjustmentFactors");
                });

            modelBuilder.Entity("Khoan.Api.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<int?>("ParentUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.HasIndex("ParentUnitId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKhoanAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("KhoanPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhoanPeriodId");

                    b.HasIndex("UnitId");

                    b.ToTable("UnitKhoanAssignments");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKhoanAssignmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LegacyKPICode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegacyKPIName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Score")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TargetValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitKhoanAssignmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitKhoanAssignmentId");

                    b.ToTable("UnitKhoanAssignmentDetails");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKpiScoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AdjustmentScore")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("BaseScore")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("KhoanPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ScoredBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ScoringDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalScore")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("UnitKhoanAssignmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KhoanPeriodId");

                    b.HasIndex("UnitId");

                    b.HasIndex("UnitKhoanAssignmentId");

                    b.ToTable("UnitKpiScorings");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKpiScoringCriteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("PenaltyScore")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UnitKpiScoringId")
                        .HasColumnType("int");

                    b.Property<int>("ViolationCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ViolationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViolationLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ViolationType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("UnitKpiScoringId");

                    b.ToTable("UnitKpiScoringCriterias");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKpiScoringDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ActualValue")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("AdjustmentScore")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("BaseScore")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("CompletionRate")
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("FinalScore")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("IndicatorName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IndicatorType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("KpiDefinitionId")
                        .HasColumnType("int");

                    b.Property<int?>("KpiIndicatorId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ScoringFormula")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TargetValue")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("UnitKpiScoringId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KpiDefinitionId");

                    b.HasIndex("KpiIndicatorId");

                    b.HasIndex("UnitKpiScoringId");

                    b.ToTable("UnitKpiScoringDetails");
                });

            modelBuilder.Entity("Khoan.Api.Models.Dashboard.BusinessPlanTarget", b =>
                {
                    b.HasOne("Khoan.Api.Models.Dashboard.DashboardIndicator", "DashboardIndicator")
                        .WithMany()
                        .HasForeignKey("DashboardIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DashboardIndicator");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Khoan.Api.Models.Dashboard.DashboardCalculation", b =>
                {
                    b.HasOne("Khoan.Api.Models.Dashboard.DashboardIndicator", "DashboardIndicator")
                        .WithMany()
                        .HasForeignKey("DashboardIndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DashboardIndicator");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Khoan.Api.Models.Employee", b =>
                {
                    b.HasOne("Khoan.Api.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.Unit", "Unit")
                        .WithMany("Employees")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeKhoanAssignment", b =>
                {
                    b.HasOne("Khoan.Api.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.KhoanPeriod", "KhoanPeriod")
                        .WithMany()
                        .HasForeignKey("KhoanPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("KhoanPeriod");
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeKhoanAssignmentDetail", b =>
                {
                    b.HasOne("Khoan.Api.Models.EmployeeKhoanAssignment", "EmployeeKhoanAssignment")
                        .WithMany("AssignmentDetails")
                        .HasForeignKey("EmployeeKhoanAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeKhoanAssignment");
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeKpiAssignment", b =>
                {
                    b.HasOne("Khoan.Api.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.KhoanPeriod", "KhoanPeriod")
                        .WithMany()
                        .HasForeignKey("KhoanPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.KPIDefinition", "KpiDefinition")
                        .WithMany()
                        .HasForeignKey("KpiDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("KhoanPeriod");

                    b.Navigation("KpiDefinition");
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeKpiTarget", b =>
                {
                    b.HasOne("Khoan.Api.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.KpiIndicator", "Indicator")
                        .WithMany("EmployeeTargets")
                        .HasForeignKey("IndicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.KhoanPeriod", "KhoanPeriod")
                        .WithMany()
                        .HasForeignKey("KhoanPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Indicator");

                    b.Navigation("KhoanPeriod");
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeRole", b =>
                {
                    b.HasOne("Khoan.Api.Models.Employee", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.Role", "Role")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Khoan.Api.Models.FinalPayout", b =>
                {
                    b.HasOne("Khoan.Api.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.KhoanPeriod", "KhoanPeriod")
                        .WithMany()
                        .HasForeignKey("KhoanPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("KhoanPeriod");
                });

            modelBuilder.Entity("Khoan.Api.Models.KpiIndicator", b =>
                {
                    b.HasOne("Khoan.Api.Models.KpiAssignmentTable", "Table")
                        .WithMany("Indicators")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Khoan.Api.Models.MSIT72_TSBD", b =>
                {
                    b.HasOne("Khoan.Api.Models.ImportedDataRecord", "ImportedDataRecord")
                        .WithMany()
                        .HasForeignKey("ImportedDataRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportedDataRecord");
                });

            modelBuilder.Entity("Khoan.Api.Models.MSIT72_TSGH", b =>
                {
                    b.HasOne("Khoan.Api.Models.ImportedDataRecord", "ImportedDataRecord")
                        .WithMany()
                        .HasForeignKey("ImportedDataRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportedDataRecord");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawDataRecord", b =>
                {
                    b.HasOne("Khoan.Api.Models.RawDataImport", "RawDataImport")
                        .WithMany("RawDataRecords")
                        .HasForeignKey("RawDataImportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RawDataImport");
                });

            modelBuilder.Entity("Khoan.Api.Models.ThuXLRR", b =>
                {
                    b.HasOne("Khoan.Api.Models.ImportedDataRecord", "ImportedDataRecord")
                        .WithMany()
                        .HasForeignKey("ImportedDataRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportedDataRecord");
                });

            modelBuilder.Entity("Khoan.Api.Models.Unit", b =>
                {
                    b.HasOne("Khoan.Api.Models.Unit", "ParentUnit")
                        .WithMany("ChildUnits")
                        .HasForeignKey("ParentUnitId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentUnit");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKhoanAssignment", b =>
                {
                    b.HasOne("Khoan.Api.Models.KhoanPeriod", "KhoanPeriod")
                        .WithMany()
                        .HasForeignKey("KhoanPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoanPeriod");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKhoanAssignmentDetail", b =>
                {
                    b.HasOne("Khoan.Api.Models.UnitKhoanAssignment", "UnitKhoanAssignment")
                        .WithMany("AssignmentDetails")
                        .HasForeignKey("UnitKhoanAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitKhoanAssignment");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKpiScoring", b =>
                {
                    b.HasOne("Khoan.Api.Models.KhoanPeriod", "KhoanPeriod")
                        .WithMany()
                        .HasForeignKey("KhoanPeriodId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.UnitKhoanAssignment", "UnitKhoanAssignment")
                        .WithMany()
                        .HasForeignKey("UnitKhoanAssignmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("KhoanPeriod");

                    b.Navigation("Unit");

                    b.Navigation("UnitKhoanAssignment");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKpiScoringCriteria", b =>
                {
                    b.HasOne("Khoan.Api.Models.UnitKpiScoring", "UnitKpiScoring")
                        .WithMany("ScoringCriteria")
                        .HasForeignKey("UnitKpiScoringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitKpiScoring");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKpiScoringDetail", b =>
                {
                    b.HasOne("Khoan.Api.Models.KPIDefinition", "KpiDefinition")
                        .WithMany()
                        .HasForeignKey("KpiDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Khoan.Api.Models.KpiIndicator", "KpiIndicator")
                        .WithMany()
                        .HasForeignKey("KpiIndicatorId");

                    b.HasOne("Khoan.Api.Models.UnitKpiScoring", "UnitKpiScoring")
                        .WithMany("ScoringDetails")
                        .HasForeignKey("UnitKpiScoringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KpiDefinition");

                    b.Navigation("KpiIndicator");

                    b.Navigation("UnitKpiScoring");
                });

            modelBuilder.Entity("Khoan.Api.Models.Employee", b =>
                {
                    b.Navigation("EmployeeRoles");
                });

            modelBuilder.Entity("Khoan.Api.Models.EmployeeKhoanAssignment", b =>
                {
                    b.Navigation("AssignmentDetails");
                });

            modelBuilder.Entity("Khoan.Api.Models.KpiAssignmentTable", b =>
                {
                    b.Navigation("Indicators");
                });

            modelBuilder.Entity("Khoan.Api.Models.KpiIndicator", b =>
                {
                    b.Navigation("EmployeeTargets");
                });

            modelBuilder.Entity("Khoan.Api.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Khoan.Api.Models.RawDataImport", b =>
                {
                    b.Navigation("RawDataRecords");
                });

            modelBuilder.Entity("Khoan.Api.Models.Role", b =>
                {
                    b.Navigation("EmployeeRoles");
                });

            modelBuilder.Entity("Khoan.Api.Models.Unit", b =>
                {
                    b.Navigation("ChildUnits");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKhoanAssignment", b =>
                {
                    b.Navigation("AssignmentDetails");
                });

            modelBuilder.Entity("Khoan.Api.Models.UnitKpiScoring", b =>
                {
                    b.Navigation("ScoringCriteria");

                    b.Navigation("ScoringDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
