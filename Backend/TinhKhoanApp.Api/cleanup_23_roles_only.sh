#!/bin/bash

echo "üßπ X√ìA DUPLICATE ROLES - CH·ªà GI·ªÆ 23 ROLES CHU·∫®N"
echo "================================================"

API_BASE="http://localhost:5055/api"

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

# Danh s√°ch 23 roles chu·∫©n duy nh·∫•t
STANDARD_ROLES=(
    "TruongphongKhdn"
    "TruongphongKhcn"
    "PhophongKhdn"
    "PhophongKhcn"
    "TruongphongKhqlrr"
    "PhophongKhqlrr"
    "Cbtd"
    "TruongphongKtnqCnl1"
    "PhophongKtnqCnl1"
    "Gdv"
    "TqHkKtnb"
    "TruongphoItThKtgs"
    "CBItThKtgsKhqlrr"
    "GiamdocPgd"
    "PhogiamdocPgd"
    "PhogiamdocPgdCbtd"
    "GiamdocCnl2"
    "PhogiamdocCnl2Td"
    "PhogiamdocCnl2Kt"
    "TruongphongKhCnl2"
    "PhophongKhCnl2"
    "TruongphongKtnqCnl2"
    "PhophongKtnqCnl2"
)

echo "üîç L·∫•y danh s√°ch t·∫•t c·∫£ roles..."
all_roles=$(curl -s "$API_BASE/roles" | jq -r '.[] | "\(.Id):\(.Name)"')

echo "üìä Ph√¢n t√≠ch duplicate roles..."

# Track first occurrence of each role name
declare -A first_occurrence
kept_count=0
deleted_count=0

while IFS=':' read -r id name; do
    if [[ " ${STANDARD_ROLES[@]} " =~ " ${name} " ]]; then
        # This is a standard role
        if [[ -z "${first_occurrence[$name]}" ]]; then
            # First occurrence - keep it
            first_occurrence[$name]="$id"
            echo -e "${GREEN}‚úÖ Gi·ªØ l·∫°i: $name (ID: $id)${NC}"
            ((kept_count++))
        else
            # Duplicate - delete it
            echo -e "${YELLOW}üóëÔ∏è X√≥a duplicate: $name (ID: $id)${NC}"
            result=$(curl -s -X DELETE "$API_BASE/roles/$id")
            if [[ $? -eq 0 ]]; then
                echo -e "${GREEN}   ‚úÖ ƒê√£ x√≥a th√†nh c√¥ng${NC}"
                ((deleted_count++))
            else
                echo -e "${RED}   ‚ùå L·ªói khi x√≥a: $result${NC}"
            fi
        fi
    else
        # Not a standard role - delete it
        echo -e "${RED}üóëÔ∏è X√≥a role kh√¥ng chu·∫©n: $name (ID: $id)${NC}"
        result=$(curl -s -X DELETE "$API_BASE/roles/$id")
        if [[ $? -eq 0 ]]; then
            echo -e "${GREEN}   ‚úÖ ƒê√£ x√≥a th√†nh c√¥ng${NC}"
            ((deleted_count++))
        else
            echo -e "${RED}   ‚ùå L·ªói khi x√≥a: $result${NC}"
        fi
    fi
    sleep 0.1
done <<< "$all_roles"

echo ""
echo "üéâ HO√ÄN TH√ÄNH CLEANUP!"
echo ""

# Verify final count
final_count=$(curl -s "$API_BASE/roles" | jq 'length')
echo -e "${BLUE}üìä K·∫øt qu·∫£:${NC}"
echo -e "${GREEN}   ‚úÖ Roles gi·ªØ l·∫°i: $kept_count${NC}"
echo -e "${YELLOW}   üóëÔ∏è Roles ƒë√£ x√≥a: $deleted_count${NC}"
echo -e "${BLUE}   üìä T·ªïng roles cu·ªëi c√πng: $final_count${NC}"

if [ "$final_count" -eq 23 ]; then
    echo -e "${GREEN}üéØ TH√ÄNH C√îNG: ƒê√∫ng 23 roles chu·∫©n!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è C·∫ßn ki·ªÉm tra: C√≥ $final_count roles (m·ª•c ti√™u: 23)${NC}"
fi

echo ""
echo "üìã 23 roles chu·∫©n c√≤n l·∫°i:"
curl -s "$API_BASE/roles" | jq -r '.[] | "  - \(.Name): \(.Description)"' | head -23
