using Microsoft.EntityFrameworkCore;
using TinhKhoanApp.Api.Data;
using TinhKhoanApp.Api.Models;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container
builder.Services.AddDbContext<ApplicationDbContext>(options =>
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));

var app = builder.Build();

// Seed complete units structure
using (var scope = app.Services.CreateScope())
{
    var context = scope.ServiceProvider.GetRequiredService<ApplicationDbContext>();

    // Clear existing units and seed with IDENTITY_INSERT
    await context.Database.ExecuteSqlRawAsync(@"
        DELETE FROM Units;

        SET IDENTITY_INSERT Units ON;

        INSERT INTO Units (Id, Code, Name, Type, ParentUnitId, IsDeleted) VALUES
        -- Root unit
        (1, 'CNL1', 'Chi nh√°nh Lai Ch√¢u', 'CNL1', NULL, 0),

        -- H·ªôi S·ªü
        (2, 'HOISO', 'H·ªôi S·ªü', 'CNL1', 1, 0),

        -- Departments under H·ªôi S·ªü
        (3, 'BGD', 'Ban Gi√°m ƒë·ªëc', 'PNVL1', 2, 0),
        (4, 'PKHDN', 'Ph√≤ng Kh√°ch h√†ng Doanh nghi·ªáp', 'PNVL1', 2, 0),
        (5, 'PKHCN', 'Ph√≤ng Kh√°ch h√†ng C√° nh√¢n', 'PNVL1', 2, 0),
        (6, 'PKTNQ', 'Ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ', 'PNVL1', 2, 0),
        (7, 'PTH', 'Ph√≤ng T·ªïng h·ª£p', 'PNVL1', 2, 0),
        (8, 'PKHQLRR', 'Ph√≤ng K·∫ø ho·∫°ch & Qu·∫£n l√Ω r·ªßi ro', 'PNVL1', 2, 0),
        (9, 'PKTGS', 'Ph√≤ng Ki·ªÉm tra gi√°m s√°t', 'PNVL1', 2, 0),

        -- Chi nh√°nh B√¨nh L∆∞
        (10, 'CNBL', 'Chi nh√°nh B√¨nh L∆∞', 'CNL2', 1, 0),
        (20, 'BGDCNBL', 'Ban Gi√°m ƒë·ªëc', 'PNVL2', 10, 0),
        (21, 'PKTNQCNBL', 'Ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ', 'PNVL2', 10, 0),
        (22, 'PKHCNBL', 'Ph√≤ng Kh√°ch h√†ng', 'PNVL2', 10, 0),

        -- Chi nh√°nh Phong Th·ªï
        (11, 'CNPT', 'Chi nh√°nh Phong Th·ªï', 'CNL2', 1, 0),
        (23, 'BGDCNPT', 'Ban Gi√°m ƒë·ªëc', 'PNVL2', 11, 0),
        (24, 'PKTNQCNPT', 'Ph√≤ng KT&NQ', 'PNVL2', 11, 0),
        (25, 'PKHCNPT', 'Ph√≤ng KH', 'PNVL2', 11, 0),
        (26, 'PGD5CNPT', 'Ph√≤ng giao d·ªãch S·ªë 5', 'PGDL2', 11, 0),

        -- Chi nh√°nh S√¨n H·ªì
        (12, 'CNSH', 'Chi nh√°nh S√¨n H·ªì', 'CNL2', 1, 0),
        (27, 'BGDCNSH', 'Ban Gi√°m ƒë·ªëc', 'PNVL2', 12, 0),
        (28, 'PKTNQCNSH', 'Ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ', 'PNVL2', 12, 0),
        (29, 'PKHCNSH', 'Ph√≤ng Kh√°ch h√†ng', 'PNVL2', 12, 0),

        -- Chi nh√°nh Bum T·ªü
        (13, 'CNBT', 'Chi nh√°nh Bum T·ªü', 'CNL2', 1, 0),
        (30, 'BGDCNBT', 'Ban Gi√°m ƒë·ªëc', 'PNVL2', 13, 0),
        (31, 'PKTNQCNBT', 'Ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ', 'PNVL2', 13, 0),
        (32, 'PKHCNBT', 'Ph√≤ng Kh√°ch h√†ng', 'PNVL2', 13, 0),

        -- Chi nh√°nh Than Uy√™n
        (14, 'CNTU', 'Chi nh√°nh Than Uy√™n', 'CNL2', 1, 0),
        (33, 'BGDCNTU', 'Ban Gi√°m ƒë·ªëc', 'PNVL2', 14, 0),
        (34, 'PKTNQCNTU', 'Ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ', 'PNVL2', 14, 0),
        (35, 'PKHCNTU', 'Ph√≤ng Kh√°ch h√†ng', 'PNVL2', 14, 0),
        (36, 'PGD6CNTU', 'Ph√≤ng giao d·ªãch s·ªë 6', 'PGDL2', 14, 0),

        -- Chi nh√°nh ƒêo√†n K·∫øt
        (15, 'CNDK', 'Chi nh√°nh ƒêo√†n K·∫øt', 'CNL2', 1, 0),
        (37, 'BGDCNDK', 'Ban Gi√°m ƒë·ªëc', 'PNVL2', 15, 0),
        (38, 'PKTNQCNDK', 'Ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ', 'PNVL2', 15, 0),
        (39, 'PKHCNDK', 'Ph√≤ng Kh√°ch h√†ng', 'PNVL2', 15, 0),
        (40, 'PGD1CNDK', 'Ph√≤ng giao d·ªãch s·ªë 1', 'PGDL2', 15, 0),
        (41, 'PGD2CNDK', 'Ph√≤ng giao d·ªãch s·ªë 2', 'PGDL2', 15, 0),

        -- Chi nh√°nh T√¢n Uy√™n
        (16, 'CNTUY', 'Chi nh√°nh T√¢n Uy√™n', 'CNL2', 1, 0),
        (42, 'BGDCNTUY', 'Ban Gi√°m ƒë·ªëc', 'PNVL2', 16, 0),
        (43, 'PKTNQCNTUY', 'Ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ', 'PNVL2', 16, 0),
        (44, 'PKHCNTUY', 'Ph√≤ng Kh√°ch h√†ng', 'PNVL2', 16, 0),
        (45, 'PGD3CNTUY', 'Ph√≤ng giao d·ªãch s·ªë 3', 'PGDL2', 16, 0),

        -- Chi nh√°nh N·∫≠m H√†ng
        (17, 'CNNH', 'Chi nh√°nh N·∫≠m H√†ng', 'CNL2', 1, 0),
        (46, 'BGDCNNH', 'Ban Gi√°m ƒë·ªëc', 'PNVL2', 17, 0),
        (47, 'PKTNQCNNH', 'Ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ', 'PNVL2', 17, 0),
        (48, 'PKHCNNH', 'Ph√≤ng Kh√°ch h√†ng', 'PNVL2', 17, 0);

        SET IDENTITY_INSERT Units OFF;
    ");

    var unitsCount = await context.Units.CountAsync();
    Console.WriteLine($"‚úÖ Successfully created {unitsCount} units!");

    // Show statistics
    var typeStats = await context.Units.GroupBy(u => u.Type)
                                     .Select(g => new { Type = g.Key, Count = g.Count() })
                                     .ToListAsync();

    Console.WriteLine("\nüìä Units by Type:");
    foreach (var stat in typeStats)
    {
        Console.WriteLine($"  {stat.Type}: {stat.Count} units");
    }

    var rootUnits = await context.Units.Where(u => u.ParentUnitId == null).ToListAsync();
    Console.WriteLine($"\nüå≥ Root units: {rootUnits.Count}");

    var branchUnits = await context.Units.Where(u => u.Type == "CNL2").ToListAsync();
    Console.WriteLine($"üè¢ Branch units (CNL2): {branchUnits.Count}");
}

Console.WriteLine("‚úÖ Units structure seeding completed!");
