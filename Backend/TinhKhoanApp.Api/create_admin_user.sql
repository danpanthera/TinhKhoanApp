-- ==================================================
-- SCRIPT T·∫†O USER ADMIN V√Ä CHU·∫®N B·ªä PH·ª§C H·ªíI D·ªÆ LI·ªÜU
-- TINHKHOAN APP - AZURE SQL EDGE ARM64
-- ==================================================

USE TinhKhoanDB;
GO

-- ==================================================
-- 1. T·∫†O USER ADMIN (CH·ªà M·ªòT USER DUY NH·∫§T)
-- ==================================================
PRINT 'B∆∞·ªõc 1: T·∫°o user admin...';

-- Hash password "admin123" b·∫±ng SHA256 (ƒë∆°n gi·∫£n)
DECLARE @PasswordHash NVARCHAR(255) = CONVERT(NVARCHAR(255), HASHBYTES('SHA2_256', 'admin123'), 2);

-- T·∫°o unit v√† position t·ªëi thi·ªÉu cho admin (s·∫Ω ƒë∆∞·ª£c thay th·∫ø b·∫±ng d·ªØ li·ªáu th·ª±c)
IF NOT EXISTS (SELECT 1 FROM Units WHERE Id = 1)
BEGIN
    SET IDENTITY_INSERT Units ON;
    INSERT INTO Units (Id, Code, Name, Type, ParentUnitId, IsDeleted)
    VALUES (1, 'ADMIN', N'Ban Qu·∫£n Tr·ªã', 'HEAD_OFFICE', NULL, 0);
    SET IDENTITY_INSERT Units OFF;
    PRINT '  - T·∫°o ƒë∆°n v·ªã qu·∫£n tr·ªã t·∫°m th·ªùi';
END

IF NOT EXISTS (SELECT 1 FROM Positions WHERE Id = 1)
BEGIN
    SET IDENTITY_INSERT Positions ON;
    INSERT INTO Positions (Id, Name, Description)
    VALUES (1, N'Qu·∫£n Tr·ªã Vi√™n', N'Qu·∫£n tr·ªã h·ªá th·ªëng TinhKhoan');
    SET IDENTITY_INSERT Positions OFF;
    PRINT '  - T·∫°o ch·ª©c v·ª• qu·∫£n tr·ªã t·∫°m th·ªùi';
END

-- T·∫°o user admin
IF NOT EXISTS (SELECT 1 FROM Employees WHERE Username = 'admin')
BEGIN
    INSERT INTO Employees (EmployeeCode, CBCode, FullName, Username, PasswordHash, Email, PhoneNumber, IsActive, UnitId, PositionId)
    VALUES ('ADMIN001', 'CB001', N'Qu·∫£n Tr·ªã Vi√™n H·ªá Th·ªëng', 'admin', @PasswordHash, 'admin@tinhkhoan.com', '0123456789', 1, 1, 1);
    PRINT '  ‚úÖ T·∫°o user admin th√†nh c√¥ng!';
END
ELSE
BEGIN
    PRINT '  ‚ö†Ô∏è User admin ƒë√£ t·ªìn t·∫°i';
END

-- ==================================================
-- 2. KI·ªÇM TRA D·ªÆ LI·ªÜU HI·ªÜN T·∫†I
-- ==================================================
PRINT '';
PRINT 'B∆∞·ªõc 2: Ki·ªÉm tra d·ªØ li·ªáu hi·ªán t·∫°i...';

SELECT
    'Units' as TableName,
    COUNT(*) as RecordCount
FROM Units
UNION ALL
SELECT
    'Positions' as TableName,
    COUNT(*) as RecordCount
FROM Positions
UNION ALL
SELECT
    'Employees' as TableName,
    COUNT(*) as RecordCount
FROM Employees
UNION ALL
SELECT
    'KPIDefinitions' as TableName,
    COUNT(*) as RecordCount
FROM KPIDefinitions
ORDER BY TableName;

-- ==================================================
-- 3. TH√îNG TIN PH·ª§C H·ªíI D·ªÆ LI·ªÜU
-- ==================================================
PRINT '';
PRINT '========================================================';
PRINT 'üìã C·∫¶N PH·ª§C H·ªíI D·ªÆ LI·ªÜU T·ª™ DATABASE C≈®:';
PRINT '========================================================';
PRINT 'üè¢ Units (ƒê∆°n v·ªã)';
PRINT 'üë• Positions (Ch·ª©c v·ª•)';
PRINT 'üë®‚Äçüíº Employees (Nh√¢n vi√™n)';
PRINT 'üìä KPIDefinitions (23 b·∫£ng KPI)';
PRINT 'üìà KpiIndicators';
PRINT '‚öñÔ∏è KpiScoringRules';
PRINT 'üéØ BusinessPlanTargets';
PRINT 'üìã T·∫•t c·∫£ d·ªØ li·ªáu nghi·ªáp v·ª• th·ª±c t·∫ø';
PRINT '';
PRINT '‚ö†Ô∏è L∆ØU √ù: KH√îNG s·ª≠ d·ª•ng d·ªØ li·ªáu m·∫´u/mock data';
PRINT '‚úÖ CH·ªà ph·ª•c h·ªìi d·ªØ li·ªáu th·ª±c t·ª´ SQL Server c≈©';
PRINT '========================================================';

-- ==================================================
-- 4. X√ÅC NH·∫¨N USER ADMIN
-- ==================================================
PRINT '';
PRINT 'B∆∞·ªõc 3: X√°c nh·∫≠n user admin ƒë√£ t·∫°o...';

SELECT
    Id,
    EmployeeCode,
    FullName,
    Username,
    Email,
    IsActive,
    UnitId,
    PositionId
FROM Employees
WHERE Username = 'admin';

PRINT '';
PRINT 'üéâ HO√ÄN TH√ÄNH: User admin/admin123 ƒë√£ s·∫µn s√†ng!';
PRINT 'üìù Ti·∫øp theo: Ph·ª•c h·ªìi d·ªØ li·ªáu t·ª´ database c≈©';

GO
