using Microsoft.EntityFrameworkCore;
using System;
using System.IO;
using System.Threading.Tasks;

// Simple script runner ƒë·ªÉ ch·∫°y restore_original_data.sql
class RestoreDataRunner
{
    public static async Task Main(string[] args)
    {
        try
        {
            var connectionString = "Server=localhost;Database=TinhKhoanApp;Trusted_Connection=true;TrustServerCertificate=true";

            var optionsBuilder = new DbContextOptionsBuilder();
            optionsBuilder.UseSqlServer(connectionString);

            using var context = new TinhKhoanAppDbContext(optionsBuilder.Options);

            // ƒê·ªçc SQL script
            var sqlScript = await File.ReadAllTextAsync("restore_original_data.sql");

            Console.WriteLine("üîÑ B·∫Øt ƒë·∫ßu kh√¥i ph·ª•c d·ªØ li·ªáu g·ªëc...");

            // Th·ª±c thi SQL script
            await context.Database.ExecuteSqlRawAsync(sqlScript);

            Console.WriteLine("‚úÖ ƒê√£ ho√†n th√†nh kh√¥i ph·ª•c d·ªØ li·ªáu!");

        }
        catch (Exception ex)
        {
            Console.WriteLine($"‚ùå L·ªói khi kh√¥i ph·ª•c d·ªØ li·ªáu: {ex.Message}");
            Console.WriteLine($"Chi ti·∫øt: {ex}");
        }
    }
}

// Dummy DbContext ƒë·ªÉ ch·∫°y script
public class TinhKhoanAppDbContext : DbContext
{
    public TinhKhoanAppDbContext(DbContextOptions options) : base(options) { }
}
