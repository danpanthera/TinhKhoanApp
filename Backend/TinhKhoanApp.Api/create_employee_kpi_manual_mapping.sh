#!/bin/bash

# =============================================================================
# T·∫†O EMPLOYEE KPI ASSIGNMENTS - WITH MANUAL MAPPING
# Map specific roles to KPI tables d·ª±a tr√™n business logic
# =============================================================================

echo "üöÄ B·∫ÆT ƒê·∫¶U T·∫†O EMPLOYEE KPI ASSIGNMENTS (MANUAL MAPPING)..."

# Database connection
SERVER="localhost,1433"
DATABASE="TinhKhoanDB"
USERNAME="sa"
PASSWORD="YourStrong@Password123"

# 1. T·∫°o manual mapping v√† assignments
echo "üéØ 1. T·∫†O EMPLOYEE KPI ASSIGNMENTS V·ªöI MANUAL MAPPING..."

sqlcmd -S $SERVER -d $DATABASE -U $USERNAME -P $PASSWORD -C -Q "
-- T·∫°o EmployeeKpiAssignments v·ªõi manual mapping d·ª±a tr√™n role names
INSERT INTO EmployeeKpiAssignments (EmployeeId, KpiIndicatorId, KhoanPeriodId, TargetValue, ActualValue, Status, AssignedAt, UpdatedAt)
SELECT
    e.Id as EmployeeId,
    ki.Id as KpiIndicatorId,
    kp.Id as KhoanPeriodId,
    CASE
        WHEN r.Name LIKE '%Tr∆∞·ªüng ph√≤ng%' THEN 1500.00
        WHEN r.Name LIKE '%Ph√≥ ph√≤ng%' THEN 1200.00
        WHEN r.Name LIKE '%Gi√°m ƒë·ªëc%' THEN 2000.00
        WHEN r.Name LIKE '%GDV%' THEN 800.00
        WHEN r.Name LIKE '%C√°n b·ªô%' THEN 1000.00
        ELSE 1000.00
    END as TargetValue,
    0.00 as ActualValue,
    'Active' as Status,
    GETDATE() as AssignedAt,
    GETDATE() as UpdatedAt
FROM Employees e
INNER JOIN EmployeeRoles er ON e.Id = er.EmployeeId
INNER JOIN Roles r ON er.RoleId = r.Id
CROSS JOIN KpiIndicators ki
CROSS JOIN (SELECT TOP 1 Id FROM KhoanPeriods WHERE YEAR(StartDate) = 2025 ORDER BY StartDate) kp
WHERE
    -- Map roles to appropriate KPI indicators
    (
        (r.Name = 'Tr∆∞·ªüng ph√≤ng KHDN' AND ki.TableId = (SELECT Id FROM KpiAssignmentTables WHERE TableName = 'TruongphongKhdn')) OR
        (r.Name = 'Tr∆∞·ªüng ph√≤ng KHCN' AND ki.TableId = (SELECT Id FROM KpiAssignmentTables WHERE TableName = 'TruongphongKhcn')) OR
        (r.Name = 'Ph√≥ ph√≤ng KHDN' AND ki.TableId = (SELECT Id FROM KpiAssignmentTables WHERE TableName = 'PhophongKhdn')) OR
        (r.Name = 'Tr∆∞·ªüng ph√≤ng KH&QLRR' AND ki.TableId = (SELECT Id FROM KpiAssignmentTables WHERE TableName = 'TruongphongKhqlrr')) OR
        (r.Name = 'Tr∆∞·ªüng ph√≤ng KTNQ CNL1' AND ki.TableId = (SELECT Id FROM KpiAssignmentTables WHERE TableName = 'TruongphongKtnqCnl1')) OR
        (r.Name = 'C√°n b·ªô t√≠n d·ª•ng' AND ki.TableId = (SELECT Id FROM KpiAssignmentTables WHERE TableName = 'Cbtd')) OR
        (r.Name = 'GDV' AND ki.TableId = (SELECT Id FROM KpiAssignmentTables WHERE TableName = 'Gdv')) OR
        (r.Name = 'Gi√°m ƒë·ªëc CNL2' AND ki.TableId = (SELECT Id FROM KpiAssignmentTables WHERE TableName = 'ChinhanhCap2')) OR
        (r.Name = 'Ph√≥ gi√°m ƒë·ªëc CNL2 ph·ª• tr√°ch TD' AND ki.TableId = (SELECT Id FROM KpiAssignmentTables WHERE TableName = 'PhongchucnangCap2'))
    )
AND NOT EXISTS (
    SELECT 1 FROM EmployeeKpiAssignments eka
    WHERE eka.EmployeeId = e.Id AND eka.KpiIndicatorId = ki.Id AND eka.KhoanPeriodId = kp.Id
);

-- B√°o c√°o k·∫øt qu·∫£
SELECT 'EmployeeKpiAssignments created: ' + CAST(@@ROWCOUNT as VARCHAR(10)) as Result;
"

# 2. Verification chi ti·∫øt
echo "‚úÖ 2. VERIFICATION CHI TI·∫æT..."

sqlcmd -S $SERVER -d $DATABASE -U $USERNAME -P $PASSWORD -C -Q "
-- Th·ªëng k√™ assignments ƒë√£ t·∫°o
SELECT
    COUNT(*) as TotalAssignments,
    COUNT(DISTINCT EmployeeId) as UniqueEmployees,
    COUNT(DISTINCT KpiIndicatorId) as UniqueKpiIndicators,
    COUNT(DISTINCT KhoanPeriodId) as UniquePeriods
FROM EmployeeKpiAssignments;

-- Chi ti·∫øt theo employee
SELECT
    e.FullName,
    r.Name as RoleName,
    COUNT(eka.Id) as AssignmentCount,
    AVG(eka.TargetValue) as AvgTargetValue
FROM Employees e
INNER JOIN EmployeeRoles er ON e.Id = er.EmployeeId
INNER JOIN Roles r ON er.RoleId = r.Id
LEFT JOIN EmployeeKpiAssignments eka ON e.Id = eka.EmployeeId
GROUP BY e.Id, e.FullName, r.Name
ORDER BY COUNT(eka.Id) DESC;
"

# 3. Test API
echo "üîó 3. TESTING API..."

echo "API Response:"
curl -s "http://localhost:5055/api/EmployeeKpiAssignment" | jq 'length // "Error occurred"'

echo ""
echo "‚úÖ HO√ÄN TH√ÄNH! Employee KPI Assignments ƒë√£ ƒë∆∞·ª£c t·∫°o v·ªõi manual mapping."
