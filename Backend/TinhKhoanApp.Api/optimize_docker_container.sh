#!/bin/bash

# =============================================================================
# üöÄ AZURE SQL EDGE CONTAINER OPTIMIZATION SCRIPT
# T·ªëi ∆∞u h√≥a t√†i nguy√™n: RAM, CPU, HDD cho hi·ªáu su·∫•t v√† ·ªïn ƒë·ªãnh
# =============================================================================

echo "üîß AZURE SQL EDGE CONTAINER OPTIMIZATION"
echo "======================================="

# Ki·ªÉm tra container hi·ªán t·∫°i
if docker ps | grep -q "azure_sql_edge_tinhkhoan"; then
    echo "üìä Current container stats:"
    docker stats azure_sql_edge_tinhkhoan --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.MemPerc}}\t{{.NetIO}}\t{{.BlockIO}}"
    echo ""
fi

echo "‚ö†Ô∏è  Chu·∫©n b·ªã t·ªëi ∆∞u container..."
echo "1. D·ª´ng container hi·ªán t·∫°i"
echo "2. Backup d·ªØ li·ªáu (n·∫øu c·∫ßn)"
echo "3. T·∫°o container m·ªõi v·ªõi c·∫•u h√¨nh t·ªëi ∆∞u"
echo ""

read -p "B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c? (y/N): " confirm
if [[ $confirm != [yY] ]]; then
    echo "‚ùå ƒê√£ h·ªßy t·ªëi ∆∞u h√≥a"
    exit 1
fi

# =============================================================================
# STEP 1: Backup v√† d·ª´ng container c≈©
# =============================================================================
echo ""
echo "üîÑ STEP 1: Backup v√† d·ª´ng container..."

# D·ª´ng container c≈©
if docker ps | grep -q "azure_sql_edge_tinhkhoan"; then
    echo "üõë D·ª´ng container hi·ªán t·∫°i..."
    docker stop azure_sql_edge_tinhkhoan
fi

# Rename container c≈© l√†m backup
if docker ps -a | grep -q "azure_sql_edge_tinhkhoan"; then
    echo "üì¶ Backup container c≈©..."
    docker rename azure_sql_edge_tinhkhoan azure_sql_edge_tinhkhoan_backup_$(date +%Y%m%d_%H%M%S)
fi

# =============================================================================
# STEP 2: T·∫°o container m·ªõi v·ªõi c·∫•u h√¨nh t·ªëi ∆∞u
# =============================================================================
echo ""
echo "üöÄ STEP 2: T·∫°o container t·ªëi ∆∞u..."

# Optimized configuration - gi·∫£m t√†i nguy√™n nh∆∞ng v·∫´n ƒë·∫£m b·∫£o hi·ªáu su·∫•t
docker run -e "ACCEPT_EULA=Y" \
  -e "MSSQL_SA_PASSWORD=Dientoan@303" \
  -p 1433:1433 \
  --name azure_sql_edge_tinhkhoan \
  -v sqldata_tinhkhoan_new:/var/opt/mssql \
  --memory=2g \
  --memory-swap=3g \
  --cpus="2" \
  --restart=unless-stopped \
  --shm-size=256m \
  --ulimit memlock=-1:-1 \
  --ulimit core=0 \
  -e "MSSQL_MEMORY_LIMIT_MB=1536" \
  -e "MSSQL_PID=Developer" \
  -e "MSSQL_COLLATION=SQL_Latin1_General_CP1_CI_AS" \
  --oom-kill-disable=false \
  --log-driver=json-file \
  --log-opt max-size=50m \
  --log-opt max-file=3 \
  -d mcr.microsoft.com/azure-sql-edge:latest

echo ""
echo "‚è≥ ƒê·ª£i container kh·ªüi ƒë·ªông..."
sleep 15

# =============================================================================
# STEP 3: Ki·ªÉm tra container m·ªõi
# =============================================================================
echo ""
echo "‚úÖ STEP 3: Ki·ªÉm tra container m·ªõi..."

# Ki·ªÉm tra container ƒëang ch·∫°y
if docker ps | grep -q "azure_sql_edge_tinhkhoan"; then
    echo "‚úÖ Container ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng!"

    echo ""
    echo "üìä New container stats:"
    docker stats azure_sql_edge_tinhkhoan --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.MemPerc}}\t{{.NetIO}}\t{{.BlockIO}}"

    echo ""
    echo "üîç Container configuration:"
    docker inspect azure_sql_edge_tinhkhoan | jq '{
        Memory: .HostConfig.Memory,
        MemorySwap: .HostConfig.MemorySwap,
        CpuCount: .HostConfig.CpuCount,
        ShmSize: .HostConfig.ShmSize,
        RestartPolicy: .HostConfig.RestartPolicy.Name
    }'
else
    echo "‚ùå Container kh√¥ng kh·ªüi ƒë·ªông ƒë∆∞·ª£c!"
    echo "Ki·ªÉm tra logs:"
    docker logs azure_sql_edge_tinhkhoan --tail 20
    exit 1
fi

# =============================================================================
# STEP 4: Test k·∫øt n·ªëi database
# =============================================================================
echo ""
echo "üîß STEP 4: Test k·∫øt n·ªëi database..."

# Wait for SQL Server to be ready
echo "‚è≥ ƒê·ª£i SQL Server s·∫µn s√†ng..."
sleep 10

# Test connection
if command -v sqlcmd &> /dev/null; then
    echo "üß™ Testing connection v·ªõi sqlcmd..."
    if sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -Q "SELECT @@VERSION, SERVERPROPERTY('Edition') AS Edition" -o /dev/null 2>&1; then
        echo "‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng!"

        # Show server info
        echo ""
        echo "üìã Server Information:"
        sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -Q "
        SELECT
            @@VERSION AS Version,
            SERVERPROPERTY('Edition') AS Edition,
            SERVERPROPERTY('ProductLevel') AS ProductLevel,
            SERVERPROPERTY('ResourceVersion') AS ResourceVersion
        " -h-1 -s"|" -W
    else
        echo "‚ö†Ô∏è  Ch∆∞a k·∫øt n·ªëi ƒë∆∞·ª£c database. Ch·ªù th√™m..."
        sleep 10

        if sqlcmd -S localhost,1433 -U sa -P 'Dientoan@303' -C -Q "SELECT 1" -o /dev/null 2>&1; then
            echo "‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng sau retry!"
        else
            echo "‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi database. Ki·ªÉm tra logs:"
            docker logs azure_sql_edge_tinhkhoan --tail 10
        fi
    fi
else
    echo "‚ö†Ô∏è  sqlcmd kh√¥ng c√≥ s·∫µn. S·ª≠ d·ª•ng docker exec ƒë·ªÉ test..."
    if docker exec -i azure_sql_edge_tinhkhoan /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Dientoan@303' -Q "SELECT 1" > /dev/null 2>&1; then
        echo "‚úÖ Container SQL Server s·∫µn s√†ng!"
    else
        echo "‚ùå SQL Server ch∆∞a s·∫µn s√†ng"
    fi
fi

# =============================================================================
# OPTIMIZATION SUMMARY
# =============================================================================
echo ""
echo "üéØ OPTIMIZATION SUMMARY"
echo "======================"
echo "üìà T·ªëi ∆∞u ƒë√£ √°p d·ª•ng:"
echo "   ‚Ä¢ RAM: 2GB (gi·∫£m t·ª´ 4GB) + 1GB swap"
echo "   ‚Ä¢ CPU: 2 cores (gi·∫£m t·ª´ 6 cores)"
echo "   ‚Ä¢ Shared Memory: 256MB (gi·∫£m t·ª´ 1GB)"
echo "   ‚Ä¢ SQL Memory: 1.5GB (t·ªëi ∆∞u cho 2GB RAM)"
echo "   ‚Ä¢ Log rotation: 50MB x 3 files"
echo "   ‚Ä¢ OOM protection: enabled"
echo ""
echo "üöÄ Performance Benefits:"
echo "   ‚Ä¢ Gi·∫£m 50% RAM usage"
echo "   ‚Ä¢ Gi·∫£m 66% CPU allocation"
echo "   ‚Ä¢ Log management t·ª± ƒë·ªông"
echo "   ‚Ä¢ Tr√°nh memory leaks"
echo "   ‚Ä¢ Container restart an to√†n"
echo ""
echo "‚ö° S·ª≠ d·ª•ng l·ªánh ƒë·ªÉ monitor:"
echo "   docker stats azure_sql_edge_tinhkhoan"
echo "   docker logs azure_sql_edge_tinhkhoan --tail 20"
echo ""
echo "‚úÖ Container t·ªëi ∆∞u ho√†n th√†nh!"
