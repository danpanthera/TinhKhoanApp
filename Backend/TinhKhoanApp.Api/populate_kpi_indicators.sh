#!/bin/bash

# Script populate KpiIndicators v√†o KpiAssignmentTables t·ª´ KpiDefinitions
# Ng√†y t·∫°o: 06/01/2025
# M·ª•c ƒë√≠ch: T·∫°o quan h·ªá gi·ªØa KpiDefinitions v√† KpiAssignmentTables qua KpiIndicators

BASE_URL="http://localhost:5055/api"

echo "üéØ POPULATE KPI INDICATORS V√ÄO ASSIGNMENT TABLES"
echo "================================================"

# 1. KI·ªÇM TRA D·ªÆ LI·ªÜU HI·ªÜN T·∫†I
echo ""
echo "üìä 1. KI·ªÇM TRA D·ªÆ LI·ªÜU HI·ªÜN T·∫†I:"
kpi_definitions_count=$(curl -s "$BASE_URL/kpidefinitions" | jq '. | length')
kpi_tables_count=$(curl -s "$BASE_URL/KpiAssignment/tables" | jq '. | length')

echo "   üìã KPI Definitions: $kpi_definitions_count"
echo "   üìä KPI Assignment Tables: $kpi_tables_count"

# 2. PH√ÇN T√çCH MAPPING ROLE ‚Üí KPI
echo ""
echo "üîç 2. PH√ÇN T√çCH MAPPING ROLE ‚Üí KPI:"

# Function ƒë·ªÉ map role name v·ªõi table ID
get_table_id_for_role() {
    local role_prefix=$1
    case $role_prefix in
        "TruongphongKhdn") echo "1" ;;
        "TruongphongKhcn") echo "2" ;;
        "PhophongKhdn") echo "3" ;;
        "PhophongKhcn") echo "4" ;;
        "TruongphongKhqlrr") echo "5" ;;
        "PhophongKhqlrr") echo "6" ;;
        "Cbtd") echo "7" ;;
        "TruongphongKtnqCnl1") echo "8" ;;
        "PhophongKtnqCnl1") echo "9" ;;
        "Gdv") echo "10" ;;
        "TqHkKtnb") echo "11" ;;
        "TruongphoItThKtgs") echo "12" ;;
        "CbItThKtgsKhqlrr") echo "13" ;;
        "GiamdocPgd") echo "14" ;;
        "PhogiamdocPgd") echo "15" ;;
        "PhogiamdocPgdCbtd") echo "16" ;;
        "GiamdocCnl2") echo "17" ;;
        "PhogiamdocCnl2Td") echo "18" ;;
        "PhogiamdocCnl2Kt") echo "19" ;;
        "TruongphongKhCnl2") echo "20" ;;
        "PhophongKhCnl2") echo "21" ;;
        "TruongphongKtnqCnl2") echo "22" ;;
        "PhophongKtnqCnl2") echo "23" ;;
        *) echo "null" ;;
    esac
}

# 3. T·∫†O KPI INDICATORS
echo ""
echo "üîß 3. T·∫†O KPI INDICATORS:"

# L·∫•y t·∫•t c·∫£ KPI Definitions
kpi_definitions=$(curl -s "$BASE_URL/kpidefinitions")

# Function ƒë·ªÉ t·∫°o indicator cho 1 KPI
create_kpi_indicator() {
    local kpi_id=$1
    local kpi_code=$2
    local kpi_name="$3"
    local max_score=$4
    local table_id=$5

    echo "   üîÑ T·∫°o indicator: KPI $kpi_id ‚Üí Table $table_id"
    echo "     KpiCode: $kpi_code"
    echo "     KpiName: $kpi_name"
    echo "     MaxScore: $max_score"

    # T·∫°o payload cho KpiIndicator
    indicator_payload=$(jq -n \
        --arg tableId "$table_id" \
        --arg kpiId "$kpi_id" \
        --arg indicatorName "$kpi_name" \
        --arg maxScore "$max_score" \
        --arg unit "ƒëi·ªÉm" \
        '{
            TableId: ($tableId | tonumber),
            KpiDefinitionId: ($kpiId | tonumber),
            IndicatorName: $indicatorName,
            MaxScore: ($maxScore | tonumber),
            Unit: $unit,
            OrderIndex: 1,
            IsActive: true
        }')

    # Note: C·∫ßn endpoint ƒë·ªÉ t·∫°o KpiIndicator
    # Hi·ªán t·∫°i ch·ªâ hi·ªÉn th·ªã payload ƒë·ªÉ test
    echo "     Payload: $indicator_payload"
    echo ""
}

# Duy·ªát qua t·ª´ng KPI Definition v√† t·∫°o indicator
echo "$kpi_definitions" | jq -c '.[]' | while read kpi; do
    kpi_id=$(echo "$kpi" | jq -r '.Id')
    kpi_code=$(echo "$kpi" | jq -r '.KpiCode')
    kpi_name=$(echo "$kpi" | jq -r '.KpiName')
    max_score=$(echo "$kpi" | jq -r '.MaxScore')

    # L·∫•y role prefix t·ª´ KpiCode
    role_prefix=$(echo "$kpi_code" | sed 's/_.*$//')

    # T√¨m table ID t∆∞∆°ng ·ª©ng
    table_id=$(get_table_id_for_role "$role_prefix")

    if [ "$table_id" != "null" ]; then
        create_kpi_indicator "$kpi_id" "$kpi_code" "$kpi_name" "$max_score" "$table_id"
    else
        echo "   ‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y table cho role: $role_prefix (KPI: $kpi_code)"
    fi

    # Limit ƒë·ªÉ test - ch·ªâ l√†m 5 KPI ƒë·∫ßu ti√™n
    if [ "$kpi_id" -gt "80" ]; then
        break
    fi
done

# 4. TH·ªêNG K√ä K·∫æT QU·∫¢
echo ""
echo "üìä 4. TH·ªêNG K√ä MAPPING:"
echo "   üìã ƒê√£ ph√¢n t√≠ch $kpi_definitions_count KPI Definitions"
echo "   üìä Mapping v·ªõi $kpi_tables_count Assignment Tables"

# 5. K·∫æT LU·∫¨N
echo ""
echo "üèÅ HO√ÄN TH√ÄNH PH√ÇN T√çCH POPULATE KPI INDICATORS"
echo "=============================================="

echo ""
echo "üìù B∆Ø·ªöC TI·∫æP THEO:"
echo "   1. üîÑ C·∫ßn t·∫°o API endpoint POST /api/KpiAssignment/indicators"
echo "   2. üîÑ Populate t·∫•t c·∫£ 135 KPI Definitions v√†o tables"
echo "   3. üîÑ Verify indicators ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng"
echo "   4. üîÑ Test KPI assignment system v·ªõi indicators"
