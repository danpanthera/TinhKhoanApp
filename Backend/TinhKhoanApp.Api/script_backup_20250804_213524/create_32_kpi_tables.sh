#!/bin/bash

echo "=== T·∫†O 32 B·∫¢NG KPI ASSIGNMENT TABLES ==="
echo "23 b·∫£ng cho C√°n b·ªô + 9 b·∫£ng cho Chi nh√°nh"

API_BASE="http://localhost:5055/api/KpiAssignmentTables"

# X√≥a to√†n b·ªô d·ªØ li·ªáu c≈© n·∫øu c√≥
echo "Cleaning up existing data..."
curl -X DELETE "$API_BASE/cleanup" -H "Content-Type: application/json" 2>/dev/null

echo ""
echo "=== T·∫†O 23 B·∫¢NG CHO C√ÅN B·ªò ==="

# 23 b·∫£ng cho c√°n b·ªô (Category = "CANBO")
declare -a canbo_tables=(
    "1:TruongphongKhdn:Tr∆∞·ªüng ph√≤ng KHDN:Tr∆∞·ªüng ph√≤ng Kh√°ch h√†ng Doanh nghi·ªáp"
    "2:TruongphongKhcn:Tr∆∞·ªüng ph√≤ng KHCN:Tr∆∞·ªüng ph√≤ng Kh√°ch h√†ng C√° nh√¢n"
    "3:PhophongKhdn:Ph√≥ ph√≤ng KHDN:Ph√≥ ph√≤ng Kh√°ch h√†ng Doanh nghi·ªáp"
    "4:PhophongKhcn:Ph√≥ ph√≤ng KHCN:Ph√≥ ph√≤ng Kh√°ch h√†ng C√° nh√¢n"
    "5:TruongphongKhqlrr:Tr∆∞·ªüng ph√≤ng KH&QLRR:Tr∆∞·ªüng ph√≤ng K·∫ø ho·∫°ch & Qu·∫£n l√Ω r·ªßi ro"
    "6:PhophongKhqlrr:Ph√≥ ph√≤ng KH&QLRR:Ph√≥ ph√≤ng K·∫ø ho·∫°ch & Qu·∫£n l√Ω r·ªßi ro"
    "7:Cbtd:C√°n b·ªô t√≠n d·ª•ng:C√°n b·ªô t√≠n d·ª•ng"
    "8:TruongphongKtnqCnl1:Tr∆∞·ªüng ph√≤ng KTNQ CNL1:Tr∆∞·ªüng ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ CNL1"
    "9:PhophongKtnqCnl1:Ph√≥ ph√≤ng KTNQ CNL1:Ph√≥ ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ CNL1"
    "10:Gdv:GDV:Giao d·ªãch vi√™n"
    "11:TqHkKtnb:Th·ªß qu·ªπ | H·∫≠u ki·ªÉm | KTNB:Th·ªß qu·ªπ | H·∫≠u ki·ªÉm | K·∫ø to√°n nghi·ªáp v·ª•"
    "12:TruongphoItThKtgs:Tr∆∞·ªüng ph√≥ IT | T·ªïng h·ª£p | KTGS:Tr∆∞·ªüng ph√≥ IT | T·ªïng h·ª£p | Ki·ªÉm tra gi√°m s√°t"
    "13:CBItThKtgsKhqlrr:C√°n b·ªô IT | T·ªïng h·ª£p | KTGS | KH&QLRR:C√°n b·ªô IT | T·ªïng h·ª£p | KTGS | KH&QLRR"
    "14:GiamdocPgd:Gi√°m ƒë·ªëc Ph√≤ng giao d·ªãch:Gi√°m ƒë·ªëc Ph√≤ng giao d·ªãch"
    "15:PhogiamdocPgd:Ph√≥ gi√°m ƒë·ªëc Ph√≤ng giao d·ªãch:Ph√≥ gi√°m ƒë·ªëc Ph√≤ng giao d·ªãch"
    "16:PhogiamdocPgdCbtd:Ph√≥ gi√°m ƒë·ªëc PGD ki√™m CBTD:Ph√≥ gi√°m ƒë·ªëc Ph√≤ng giao d·ªãch ki√™m CBTD"
    "17:GiamdocCnl2:Gi√°m ƒë·ªëc CNL2:Gi√°m ƒë·ªëc Chi nh√°nh c·∫•p 2"
    "18:PhogiamdocCnl2Td:Ph√≥ gi√°m ƒë·ªëc CNL2 ph·ª• tr√°ch TD:Ph√≥ gi√°m ƒë·ªëc CNL2 ph·ª• tr√°ch T√≠n d·ª•ng"
    "19:PhogiamdocCnl2Kt:Ph√≥ gi√°m ƒë·ªëc CNL2 ph·ª• tr√°ch KT:Ph√≥ gi√°m ƒë·ªëc CNL2 ph·ª• tr√°ch K·∫ø to√°n"
    "20:TruongphongKhCnl2:Tr∆∞·ªüng ph√≤ng KH CNL2:Tr∆∞·ªüng ph√≤ng Kh√°ch h√†ng CNL2"
    "21:PhophongKhCnl2:Ph√≥ ph√≤ng KH CNL2:Ph√≥ ph√≤ng Kh√°ch h√†ng CNL2"
    "22:TruongphongKtnqCnl2:Tr∆∞·ªüng ph√≤ng KTNQ CNL2:Tr∆∞·ªüng ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ CNL2"
    "23:PhophongKtnqCnl2:Ph√≥ ph√≤ng KTNQ CNL2:Ph√≥ ph√≤ng K·∫ø to√°n & Ng√¢n qu·ªπ CNL2"
)

for table_info in "${canbo_tables[@]}"; do
    IFS=':' read -r table_type table_name display_name description <<< "$table_info"

    echo "Creating table $table_type: $display_name"

    curl -X POST "$API_BASE" \
        -H "Content-Type: application/json" \
        -d "{
            \"TableType\": $table_type,
            \"TableName\": \"$display_name\",
            \"Description\": \"$description\",
            \"Category\": \"CANBO\",
            \"IsActive\": true
        }" \
        -s > /dev/null

    if [ $? -eq 0 ]; then
        echo "‚úÖ Created: $display_name"
    else
        echo "‚ùå Failed: $display_name"
    fi
done

echo ""
echo "=== T·∫†O 9 B·∫¢NG CHO CHI NH√ÅNH ==="

# 9 b·∫£ng cho chi nh√°nh (Category = "CHINHANH")
declare -a chinhanh_tables=(
    "200:HoiSo:KPI H·ªôi S·ªü:B·∫£ng KPI cho H·ªôi S·ªü"
    "201:CnTamDuong:KPI Chi nh√°nh B√¨nh L∆∞:B·∫£ng KPI cho Chi nh√°nh B√¨nh L∆∞"
    "202:CnPhongTho:KPI Chi nh√°nh Phong Th·ªï:B·∫£ng KPI cho Chi nh√°nh Phong Th·ªï"
    "203:CnSinHo:KPI Chi nh√°nh S√¨n H·ªì:B·∫£ng KPI cho Chi nh√°nh S√¨n H·ªì"
    "204:CnMuongTe:KPI Chi nh√°nh Bum T·ªü:B·∫£ng KPI cho Chi nh√°nh Bum T·ªü"
    "205:CnThanUyen:KPI Chi nh√°nh Than Uy√™n:B·∫£ng KPI cho Chi nh√°nh Than Uy√™n"
    "206:CnThanhPho:KPI Chi nh√°nh ƒêo√†n K·∫øt:B·∫£ng KPI cho Chi nh√°nh ƒêo√†n K·∫øt"
    "207:CnTanUyen:KPI Chi nh√°nh T√¢n Uy√™n:B·∫£ng KPI cho Chi nh√°nh T√¢n Uy√™n"
    "208:CnNamNhun:KPI Chi nh√°nh N·∫≠m H√†ng:B·∫£ng KPI cho Chi nh√°nh N·∫≠m H√†ng"
)

for table_info in "${chinhanh_tables[@]}"; do
    IFS=':' read -r table_type table_name display_name description <<< "$table_info"

    echo "Creating table $table_type: $display_name"

    curl -X POST "$API_BASE" \
        -H "Content-Type: application/json" \
        -d "{
            \"TableType\": $table_type,
            \"TableName\": \"$display_name\",
            \"Description\": \"$description\",
            \"Category\": \"CHINHANH\",
            \"IsActive\": true
        }" \
        -s > /dev/null

    if [ $? -eq 0 ]; then
        echo "‚úÖ Created: $display_name"
    else
        echo "‚ùå Failed: $display_name"
    fi
done

echo ""
echo "=== VERIFICATION ==="
echo "Checking total count..."
total_count=$(curl -s "$API_BASE" | jq '. | length')
canbo_count=$(curl -s "$API_BASE" | jq '[.[] | select(.Category == "CANBO")] | length')
chinhanh_count=$(curl -s "$API_BASE" | jq '[.[] | select(.Category == "CHINHANH")] | length')

echo "üìä RESULTS:"
echo "- Total KPI tables: $total_count"
echo "- C√°n b·ªô tables: $canbo_count"
echo "- Chi nh√°nh tables: $chinhanh_count"

if [ "$total_count" = "32" ] && [ "$canbo_count" = "23" ] && [ "$chinhanh_count" = "9" ]; then
    echo "‚úÖ SUCCESS: All 32 KPI tables created correctly!"
else
    echo "‚ùå MISMATCH: Expected 32 total (23 CANBO + 9 CHINHANH)"
fi

echo "=== COMPLETED ==="
