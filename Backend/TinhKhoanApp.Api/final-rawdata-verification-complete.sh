#!/bin/bash

# Script ki·ªÉm tra cu·ªëi c√πng ƒë·ªÉ x√°c nh·∫≠n ƒë√£ s·ª≠a tri·ªát ƒë·ªÉ v·∫•n ƒë·ªÅ v·ªõi kho d·ªØ li·ªáu th√¥
# Th·ª±c hi·ªán ki·ªÉm tra to√†n di·ªán t·∫•t c·∫£ c√°c endpoint c·ªßa raw data API

echo "üîç KI·ªÇM TRA CU·ªêI C√ôNG KHO D·ªÆ LI·ªÜU TH√î"
echo "====================================="
echo ""

# Bi·∫øn l∆∞u tr·∫°ng th√°i ki·ªÉm tra (0 = th√†nh c√¥ng, 1 = th·∫•t b·∫°i)
TEST_STATUS=0

# API Base URL
API_URL="https://localhost:7001/api"

# 1. Ki·ªÉm tra k·∫øt n·ªëi server
echo "1Ô∏è‚É£ Ki·ªÉm tra k·∫øt n·ªëi server..."
if curl -s -k "${API_URL}/health" > /dev/null; then
    echo "‚úÖ Server ho·∫°t ƒë·ªông."
else
    echo "‚ùå Server kh√¥ng ho·∫°t ƒë·ªông."
    exit 1
fi
echo ""

# 2. Ki·ªÉm tra endpoint l·∫•y danh s√°ch raw data
echo "2Ô∏è‚É£ Ki·ªÉm tra GET /api/rawdata..."
RESPONSE=$(curl -s -k -X GET "${API_URL}/rawdata" -H "accept: application/json")
if [[ $RESPONSE == *"Id"* ]]; then
    echo "‚úÖ GET /api/rawdata tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá."
else
    echo "‚ùå GET /api/rawdata kh√¥ng tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá."
    TEST_STATUS=1
fi
echo ""

# 3. Ki·ªÉm tra endpoint l·∫•y dashboard stats
echo "3Ô∏è‚É£ Ki·ªÉm tra GET /api/rawdata/dashboard/stats..."
RESPONSE=$(curl -s -k -X GET "${API_URL}/rawdata/dashboard/stats" -H "accept: application/json")
if [[ $RESPONSE == *"totalImports"* ]]; then
    echo "‚úÖ GET /api/rawdata/dashboard/stats tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá."
else
    echo "‚ùå GET /api/rawdata/dashboard/stats kh√¥ng tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá."
    TEST_STATUS=1
fi
echo ""

# 4. Ki·ªÉm tra endpoint l·∫•y d·ªØ li·ªáu theo ng√†y
echo "4Ô∏è‚É£ Ki·ªÉm tra GET /api/rawdata/by-date/LN01/20250615..."
RESPONSE=$(curl -s -k -X GET "${API_URL}/rawdata/by-date/LN01/20250615" -H "accept: application/json")
if [[ $RESPONSE == *"["* ]]; then
    echo "‚úÖ GET /api/rawdata/by-date tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá."
else
    echo "‚ùå GET /api/rawdata/by-date kh√¥ng tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá."
    TEST_STATUS=1
fi
echo ""

# 5. Ki·ªÉm tra endpoint check duplicate
echo "5Ô∏è‚É£ Ki·ªÉm tra GET /api/rawdata/check-duplicate/LN01/20250615..."
RESPONSE=$(curl -s -k -X GET "${API_URL}/rawdata/check-duplicate/LN01/20250615" -H "accept: application/json")
if [[ $RESPONSE == *"hasDuplicate"* ]]; then
    echo "‚úÖ GET /api/rawdata/check-duplicate tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá."
else
    echo "‚ùå GET /api/rawdata/check-duplicate kh√¥ng tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá."
    TEST_STATUS=1
fi
echo ""

# 6. Ki·ªÉm tra endpoint l·∫•y d·ªØ li·ªáu t·ªëi ∆∞u
echo "6Ô∏è‚É£ Ki·ªÉm tra GET /api/rawdata/optimized/records..."
RESPONSE=$(curl -s -k -X GET "${API_URL}/rawdata/optimized/records" -H "accept: application/json")
if [[ $RESPONSE == *"data"* ]]; then
    echo "‚úÖ GET /api/rawdata/optimized/records tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá."
else
    echo "‚ùå GET /api/rawdata/optimized/records kh√¥ng tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá."
    TEST_STATUS=1
fi
echo ""

# 7. T·∫°o file test v√† upload
echo "7Ô∏è‚É£ Ki·ªÉm tra th√™m d·ªØ li·ªáu m·ªõi..."
echo "D·ªØ li·ªáu ki·ªÉm tra,Gi√° tr·ªã" > test_DP01_final.csv
echo "1,100" >> test_DP01_final.csv
echo "2,200" >> test_DP01_final.csv

RESPONSE=$(curl -s -k -X POST "${API_URL}/rawdata/import/DP01" \
  -H "accept: application/json" \
  -H "Content-Type: multipart/form-data" \
  -F "Files=@test_DP01_final.csv" \
  -F "Notes=Ki·ªÉm tra cu·ªëi c√πng")

if [[ $RESPONSE == *"th√†nh c√¥ng"* ]]; then
    echo "‚úÖ POST /api/rawdata/import/DP01 import th√†nh c√¥ng."
else
    echo "‚ùå POST /api/rawdata/import/DP01 import th·∫•t b·∫°i."
    TEST_STATUS=1
fi
echo ""

# 8. Ki·ªÉm tra d·ªØ li·ªáu m·ªõi c√≥ trong danh s√°ch
echo "8Ô∏è‚É£ Ki·ªÉm tra d·ªØ li·ªáu m·ªõi c√≥ trong danh s√°ch..."
sleep 1
RESPONSE=$(curl -s -k -X GET "${API_URL}/rawdata" -H "accept: application/json")
if [[ $RESPONSE == *"test_DP01_final.csv"* ]]; then
    echo "‚úÖ D·ªØ li·ªáu m·ªõi xu·∫•t hi·ªán trong danh s√°ch."
else
    echo "‚ùå D·ªØ li·ªáu m·ªõi KH√îNG xu·∫•t hi·ªán trong danh s√°ch."
    TEST_STATUS=1
fi
echo ""

# 9. T√¨m ID c·ªßa d·ªØ li·ªáu m·ªõi import
ID=$(echo $RESPONSE | grep -o '"Id":[0-9]*,"FileName":"test_DP01_final.csv"' | grep -o '[0-9]*')

# 10. X√≥a d·ªØ li·ªáu v·ª´a import
if [[ ! -z "$ID" ]]; then
    echo "9Ô∏è‚É£ Ki·ªÉm tra x√≥a d·ªØ li·ªáu m·ªõi import (ID: $ID)..."
    RESPONSE=$(curl -s -k -X DELETE "${API_URL}/rawdata/$ID" -H "accept: application/json")
    if [[ $RESPONSE == *"th√†nh c√¥ng"* ]]; then
        echo "‚úÖ DELETE /api/rawdata/$ID x√≥a th√†nh c√¥ng."
    else
        echo "‚ùå DELETE /api/rawdata/$ID x√≥a th·∫•t b·∫°i."
        TEST_STATUS=1
    fi
    echo ""
fi

# 11. Ki·ªÉm tra d·ªØ li·ªáu ƒë√£ b·ªã x√≥a kh·ªèi danh s√°ch
echo "üîü Ki·ªÉm tra d·ªØ li·ªáu ƒë√£ b·ªã x√≥a kh·ªèi danh s√°ch..."
sleep 1
RESPONSE=$(curl -s -k -X GET "${API_URL}/rawdata" -H "accept: application/json")
if [[ $RESPONSE == *"test_DP01_final.csv"* ]]; then
    echo "‚ùå D·ªØ li·ªáu v·∫´n c√≤n trong danh s√°ch sau khi x√≥a."
    TEST_STATUS=1
else
    echo "‚úÖ D·ªØ li·ªáu ƒë√£ b·ªã x√≥a kh·ªèi danh s√°ch."
fi
echo ""

# D·ªçn d·∫πp
rm -f test_DP01_final.csv

# K·∫øt qu·∫£ ki·ªÉm tra
echo "üìã K·∫æT QU·∫¢ KI·ªÇM TRA CU·ªêI C√ôNG"
echo "==============================="
if [ $TEST_STATUS -eq 0 ]; then
    echo "‚úÖ T·∫§T C·∫¢ KI·ªÇM TRA ƒê·ªÄU TH√ÄNH C√îNG!"
    echo "üéâ ƒê√£ s·ª≠a tri·ªát ƒë·ªÉ v·∫•n ƒë·ªÅ v·ªõi kho d·ªØ li·ªáu th√¥."
else
    echo "‚ùå C√ì L·ªñI TRONG QU√Å TR√åNH KI·ªÇM TRA!"
    echo "‚ö†Ô∏è V·∫´n c√≤n v·∫•n ƒë·ªÅ c·∫ßn gi·∫£i quy·∫øt."
fi
