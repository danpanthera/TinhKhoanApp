#!/bin/bash

# üöÄ TinhKhoanApp - Complete Fullstack Startup Script
# Theo quy t·∫Øc trong README_DAT.md d√≤ng 110-125
# Kh·ªüi ƒë·ªông: Database -> Backend (5055) -> Frontend (3000)

# M√†u s·∫Øc cho output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

echo -e "${PURPLE}üöÄ TinhKhoanApp - Fullstack Startup${NC}"
echo -e "${PURPLE}===================================${NC}"

# ƒê∆∞·ªùng d·∫´n projects
BACKEND_PATH="/Users/nguyendat/Documents/Projects/TinhKhoanApp/Backend/TinhKhoanApp.Api"
FRONTEND_PATH="/Users/nguyendat/Documents/Projects/TinhKhoanApp/Frontend/tinhkhoan-app-ui-vite"

# H√†m cleanup khi script b·ªã interrupt
cleanup() {
    echo -e "${YELLOW}üõë Cleaning up processes...${NC}"
    pkill -f "dotnet.*TinhKhoan" 2>/dev/null
    pkill -f "npm.*dev" 2>/dev/null
    exit 0
}

# Trap SIGINT (Ctrl+C)
trap cleanup SIGINT

echo -e "${BLUE}üìç Backend Path: ${BACKEND_PATH}${NC}"
echo -e "${BLUE}üìç Frontend Path: ${FRONTEND_PATH}${NC}"

# B∆∞·ªõc 1: Kh·ªüi ƒë·ªông Database
echo -e "${YELLOW}üê≥ B∆∞·ªõc 1: Kh·ªüi ƒë·ªông Database...${NC}"
cd "${BACKEND_PATH}"
if [ -f "./start_database.sh" ]; then
    ./start_database.sh
    echo -e "${GREEN}‚úÖ Database started${NC}"
else
    echo -e "${RED}‚ùå start_database.sh not found${NC}"
fi

# B∆∞·ªõc 2: Kh·ªüi ƒë·ªông Backend
echo -e "${YELLOW}‚öôÔ∏è  B∆∞·ªõc 2: Kh·ªüi ƒë·ªông Backend API (Port 5055)...${NC}"
cd "${BACKEND_PATH}"
if [ -f "./start_backend.sh" ]; then
    ./start_backend.sh &
    BACKEND_PID=$!
    echo -e "${GREEN}‚úÖ Backend started with PID: ${BACKEND_PID}${NC}"

    # Wait for backend to be ready
    echo -e "${YELLOW}‚è≥ Waiting for backend to be ready...${NC}"
    sleep 10

    # Test backend
    if curl -s http://localhost:5055/health >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Backend health check passed${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Backend starting (health check pending)${NC}"
    fi
else
    echo -e "${RED}‚ùå start_backend.sh not found${NC}"
fi

# B∆∞·ªõc 3: Kh·ªüi ƒë·ªông Frontend
echo -e "${YELLOW}üé® B∆∞·ªõc 3: Kh·ªüi ƒë·ªông Frontend (Port 3000)...${NC}"
cd "${FRONTEND_PATH}"
if [ -f "./start_frontend.sh" ]; then
    ./start_frontend.sh &
    FRONTEND_PID=$!
    echo -e "${GREEN}‚úÖ Frontend started with PID: ${FRONTEND_PID}${NC}"

    # Wait for frontend to be ready
    echo -e "${YELLOW}‚è≥ Waiting for frontend to be ready...${NC}"
    sleep 15

    # Test frontend
    if curl -s http://localhost:3000 >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Frontend ready at http://localhost:3000${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Frontend starting (still loading)${NC}"
    fi
else
    echo -e "${RED}‚ùå start_frontend.sh not found${NC}"
fi

# Summary
echo -e "${PURPLE}üéâ TinhKhoanApp Fullstack Started!${NC}"
echo -e "${PURPLE}=================================${NC}"
echo -e "${GREEN}üóÑÔ∏è  Database: TinhKhoanDB (sa/Dientoan@303)${NC}"
echo -e "${GREEN}‚öôÔ∏è  Backend API: http://localhost:5055${NC}"
echo -e "${GREEN}üé® Frontend: http://localhost:3000${NC}"
echo -e "${BLUE}üìù Logs:${NC}"
echo -e "${BLUE}  - Backend: ${BACKEND_PATH}/backend.log${NC}"
echo -e "${BLUE}  - Frontend: ${FRONTEND_PATH}/frontend.log${NC}"
echo -e "${YELLOW}üí° Press Ctrl+C to stop all services${NC}"

# Keep script running ƒë·ªÉ maintain processes
echo -e "${YELLOW}üîÑ Services running. Press Ctrl+C to stop...${NC}"
while true; do
    sleep 10

    # Check services health
    if ! pgrep -f "dotnet.*TinhKhoan" >/dev/null; then
        echo -e "${RED}‚ö†Ô∏è  Backend process died, restarting...${NC}"
        cd "${BACKEND_PATH}"
        ./start_backend.sh &
    fi

    if ! pgrep -f "npm.*dev" >/dev/null; then
        echo -e "${RED}‚ö†Ô∏è  Frontend process died, restarting...${NC}"
        cd "${FRONTEND_PATH}"
        ./start_frontend.sh &
    fi
done
