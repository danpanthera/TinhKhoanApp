-- ==================================================
-- SCRIPT T·ªêI ∆ØU: C·∫§U H√åNH T·ª™NG B·∫¢NG M·ªòT C√ÅCH AN TO√ÄN
-- ==================================================

USE TinhKhoanDB;
GO

-- H√†m helper ƒë·ªÉ c·∫•u h√¨nh m·ªôt b·∫£ng
CREATE OR ALTER PROCEDURE ConfigureRawDataTable
    @TableName NVARCHAR(50)
AS
BEGIN
    DECLARE @sql NVARCHAR(MAX);
    DECLARE @historyTableName NVARCHAR(60) = @TableName + '_History';

    PRINT '=== C·∫•u h√¨nh b·∫£ng ' + @TableName + ' ===';

    -- B∆∞·ªõc 1: T·∫Øt system versioning n·∫øu c√≥
    IF EXISTS (SELECT * FROM sys.tables WHERE name = @TableName AND temporal_type = 2)
    BEGIN
        SET @sql = 'ALTER TABLE [' + @TableName + '] SET (SYSTEM_VERSIONING = OFF);';
        EXEC sp_executesql @sql;
        PRINT '  ‚úì ƒê√£ t·∫Øt system versioning';
    END

    -- B∆∞·ªõc 2: X√≥a history table c≈©
    IF EXISTS (SELECT * FROM sys.tables WHERE name = @historyTableName)
    BEGIN
        SET @sql = 'DROP TABLE [' + @historyTableName + '];';
        EXEC sp_executesql @sql;
        PRINT '  ‚úì ƒê√£ x√≥a history table c≈©';
    END

    -- B∆∞·ªõc 3: X√≥a default constraints cho system-time columns
    SET @sql = '';
    SELECT @sql = @sql + 'ALTER TABLE [' + @TableName + '] DROP CONSTRAINT [' + dc.name + '];' + CHAR(13)
    FROM sys.default_constraints dc
    INNER JOIN sys.columns c ON dc.parent_object_id = c.object_id AND dc.parent_column_id = c.column_id
    WHERE dc.parent_object_id = OBJECT_ID(@TableName)
        AND c.name IN ('SysStartTime', 'SysEndTime');

    IF LEN(@sql) > 0
    BEGIN
        EXEC sp_executesql @sql;
        PRINT '  ‚úì ƒê√£ x√≥a default constraints';
    END

    -- B∆∞·ªõc 4: X√≥a PERIOD FOR SYSTEM_TIME
    IF EXISTS (SELECT * FROM sys.periods WHERE object_id = OBJECT_ID(@TableName))
    BEGIN
        SET @sql = 'ALTER TABLE [' + @TableName + '] DROP PERIOD FOR SYSTEM_TIME;';
        EXEC sp_executesql @sql;
        PRINT '  ‚úì ƒê√£ x√≥a PERIOD FOR SYSTEM_TIME';
    END

    -- B∆∞·ªõc 5: X√≥a system-time columns
    IF EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(@TableName) AND name = 'SysStartTime')
    BEGIN
        SET @sql = 'ALTER TABLE [' + @TableName + '] DROP COLUMN SysStartTime, SysEndTime;';
        EXEC sp_executesql @sql;
        PRINT '  ‚úì ƒê√£ x√≥a system-time columns c≈©';
    END

    -- B∆∞·ªõc 6: X√≥a clustered index c≈© (tr·ª´ primary key)
    DECLARE @indexName NVARCHAR(128);
    SELECT @indexName = i.name
    FROM sys.indexes i
    WHERE i.object_id = OBJECT_ID(@TableName)
        AND i.type_desc = 'CLUSTERED'
        AND i.is_primary_key = 0
        AND i.name IS NOT NULL;

    IF @indexName IS NOT NULL
    BEGIN
        SET @sql = 'DROP INDEX [' + @indexName + '] ON [' + @TableName + '];';
        EXEC sp_executesql @sql;
        PRINT '  ‚úì ƒê√£ x√≥a clustered index c≈©: ' + @indexName;
    END

    -- B∆∞·ªõc 7: Th√™m system-time columns m·ªõi
    SET @sql = 'ALTER TABLE [' + @TableName + ']
                ADD SysStartTime DATETIME2 GENERATED ALWAYS AS ROW START HIDDEN DEFAULT GETUTCDATE(),
                    SysEndTime DATETIME2 GENERATED ALWAYS AS ROW END HIDDEN DEFAULT ''9999-12-31 23:59:59.9999999'',
                    PERIOD FOR SYSTEM_TIME (SysStartTime, SysEndTime);';
    EXEC sp_executesql @sql;
    PRINT '  ‚úì ƒê√£ th√™m system-time columns m·ªõi';

    -- B∆∞·ªõc 8: B·∫≠t system versioning
    SET @sql = 'ALTER TABLE [' + @TableName + ']
                SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE = dbo.[' + @historyTableName + ']));';
    EXEC sp_executesql @sql;
    PRINT '  ‚úì ƒê√£ b·∫≠t system versioning';

    -- B∆∞·ªõc 9: T·∫°o columnstore index (n·∫øu ch∆∞a c√≥ primary key clustered)
    IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(@TableName) AND is_primary_key = 1 AND type_desc = 'CLUSTERED')
    BEGIN
        SET @sql = 'CREATE CLUSTERED COLUMNSTORE INDEX CCI_' + @TableName + ' ON [' + @TableName + '];';
        EXEC sp_executesql @sql;
        PRINT '  ‚úì ƒê√£ t·∫°o clustered columnstore index';
    END
    ELSE
    BEGIN
        -- T·∫°o nonclustered columnstore index thay th·∫ø
        IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(@TableName) AND type_desc = 'NONCLUSTERED COLUMNSTORE')
        BEGIN
            SET @sql = 'CREATE NONCLUSTERED COLUMNSTORE INDEX NCCI_' + @TableName + ' ON [' + @TableName + '] ();';
            EXEC sp_executesql @sql;
            PRINT '  ‚úì ƒê√£ t·∫°o nonclustered columnstore index';
        END
    END

    PRINT '  üéâ Ho√†n th√†nh c·∫•u h√¨nh b·∫£ng ' + @TableName;
    PRINT '';
END
GO
