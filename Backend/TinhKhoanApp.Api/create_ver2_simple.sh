#!/bin/bash

# Script t·∫°o c·∫•u tr√∫c ƒë∆°n v·ªã Ver2 ƒë∆°n gi·∫£n
API_BASE="http://localhost:5055/api"

echo "üéØ T·∫†O C·∫§U TR√öC ƒê∆†N V·ªä VER2 - 46 ƒê∆†N V·ªä"
echo "üìÖ B·∫Øt ƒë·∫ßu: $(date)"

# X√≥a t·∫•t c·∫£ d·ªØ li·ªáu
echo "üßπ X√ìA TO√ÄN B·ªò D·ªÆ LI·ªÜU C≈®..."

# X√≥a employees
EMPLOYEES=$(curl -s "$API_BASE/Employees")
EMP_IDS=$(echo "$EMPLOYEES" | jq -r '.[].Id // empty' 2>/dev/null)
EMP_COUNT=0
for ID in $EMP_IDS; do
    curl -s -X DELETE "$API_BASE/Employees/$ID" > /dev/null
    EMP_COUNT=$((EMP_COUNT + 1))
done
echo "‚úÖ ƒê√£ x√≥a $EMP_COUNT nh√¢n vi√™n"

# X√≥a units
UNITS=$(curl -s "$API_BASE/Units")
UNIT_IDS=$(echo "$UNITS" | jq -r '.[].Id // empty' 2>/dev/null)
UNIT_COUNT=0
for ID in $UNIT_IDS; do
    curl -s -X DELETE "$API_BASE/Units/$ID" > /dev/null
    UNIT_COUNT=$((UNIT_COUNT + 1))
done
echo "‚úÖ ƒê√£ x√≥a $UNIT_COUNT ƒë∆°n v·ªã"

# X√≥a positions
POSITIONS=$(curl -s "$API_BASE/Positions")
POS_IDS=$(echo "$POSITIONS" | jq -r '.[].Id // empty' 2>/dev/null)
POS_COUNT=0
for ID in $POS_IDS; do
    curl -s -X DELETE "$API_BASE/Positions/$ID" > /dev/null
    POS_COUNT=$((POS_COUNT + 1))
done
echo "‚úÖ ƒê√£ x√≥a $POS_COUNT ch·ª©c v·ª•"

# H√†m t·∫°o ƒë∆°n v·ªã
create_unit() {
    local name="$1"
    local code="$2"
    local type="$3"
    local parent_id="$4"

    local json="{\"Name\": \"$name\", \"Code\": \"$code\", \"Type\": \"$type\""
    if [ -n "$parent_id" ] && [ "$parent_id" != "null" ]; then
        json="$json, \"ParentUnitId\": $parent_id"
    fi
    json="$json}"

    echo "‚è≥ ƒêang t·∫°o: $name ($type)"

    local response=$(curl -s -X POST "$API_BASE/Units" \
        -H "Content-Type: application/json" \
        -d "$json")

    local unit_id=""
    if [ -n "$response" ] && [[ "$response" == *"Id"* ]]; then
        unit_id=$(echo "$response" | jq -r '.Id // empty' 2>/dev/null)
    fi

    if [ -n "$unit_id" ] && [ "$unit_id" != "null" ]; then
        echo "‚úÖ Th√†nh c√¥ng: $name - ID: $unit_id"
        echo "$unit_id"
    else
        echo "‚ùå Th·∫•t b·∫°i: $name"
        echo ""
    fi
}

echo ""
echo "üèóÔ∏è T·∫†O C·∫§U TR√öC VER2 CH√çNH TH·ª®C"

# 1. T·∫°o Chi nh√°nh Lai Ch√¢u (LV1)
echo "1Ô∏è‚É£ T·∫°o Chi nh√°nh Lai Ch√¢u (LV1)..."
ROOT_RESPONSE=$(curl -s -X POST "$API_BASE/Units" -H "Content-Type: application/json" -d '{"Name": "Chi nh√°nh Lai Ch√¢u", "Code": "CNL1_LaiChau", "Type": "CNL1"}')
ROOT_ID=$(echo "$ROOT_RESPONSE" | jq -r '.Id // empty')
echo "‚úÖ Root ID: $ROOT_ID"

if [ -z "$ROOT_ID" ] || [ "$ROOT_ID" = "null" ]; then
    echo "‚ùå Kh√¥ng th·ªÉ t·∫°o ƒë∆°n v·ªã g·ªëc! Response: $ROOT_RESPONSE"
    exit 1
fi

# 2. T·∫°o 9 ƒë∆°n v·ªã CNL2 (H·ªôi s·ªü + 8 Chi nh√°nh)
echo ""
echo "2Ô∏è‚É£ T·∫°o 9 ƒë∆°n v·ªã CNL2..."

# H·ªôi s·ªü
HS_RESPONSE=$(curl -s -X POST "$API_BASE/Units" -H "Content-Type: application/json" -d "{\"Name\": \"H·ªôi s·ªü\", \"Code\": \"CNL2_HoiSo\", \"Type\": \"CNL2\", \"ParentUnitId\": $ROOT_ID}")
HS_ID=$(echo "$HS_RESPONSE" | jq -r '.Id // empty')
echo "‚úÖ H·ªôi s·ªü ID: $HS_ID"

# 8 Chi nh√°nh
BL_RESPONSE=$(curl -s -X POST "$API_BASE/Units" -H "Content-Type: application/json" -d "{\"Name\": \"CN B√¨nh L∆∞\", \"Code\": \"CNL2_BinhLu\", \"Type\": \"CNL2\", \"ParentUnitId\": $ROOT_ID}")
BL_ID=$(echo "$BL_RESPONSE" | jq -r '.Id // empty')
echo "‚úÖ CN B√¨nh L∆∞ ID: $BL_ID"

PT_RESPONSE=$(curl -s -X POST "$API_BASE/Units" -H "Content-Type: application/json" -d "{\"Name\": \"CN Phong Th·ªï\", \"Code\": \"CNL2_PhongTho\", \"Type\": \"CNL2\", \"ParentUnitId\": $ROOT_ID}")
PT_ID=$(echo "$PT_RESPONSE" | jq -r '.Id // empty')
echo "‚úÖ CN Phong Th·ªï ID: $PT_ID"

SH_RESPONSE=$(curl -s -X POST "$API_BASE/Units" -H "Content-Type: application/json" -d "{\"Name\": \"CN S√¨n H·ªì\", \"Code\": \"CNL2_SinHo\", \"Type\": \"CNL2\", \"ParentUnitId\": $ROOT_ID}")
SH_ID=$(echo "$SH_RESPONSE" | jq -r '.Id // empty')
echo "‚úÖ CN S√¨n H·ªì ID: $SH_ID"

BT_RESPONSE=$(curl -s -X POST "$API_BASE/Units" -H "Content-Type: application/json" -d "{\"Name\": \"CN Bum T·ªü\", \"Code\": \"CNL2_BumTo\", \"Type\": \"CNL2\", \"ParentUnitId\": $ROOT_ID}")
BT_ID=$(echo "$BT_RESPONSE" | jq -r '.Id // empty')
echo "‚úÖ CN Bum T·ªü ID: $BT_ID"

TU_RESPONSE=$(curl -s -X POST "$API_BASE/Units" -H "Content-Type: application/json" -d "{\"Name\": \"CN Than Uy√™n\", \"Code\": \"CNL2_ThanUyen\", \"Type\": \"CNL2\", \"ParentUnitId\": $ROOT_ID}")
TU_ID=$(echo "$TU_RESPONSE" | jq -r '.Id // empty')
echo "‚úÖ CN Than Uy√™n ID: $TU_ID"

DK_RESPONSE=$(curl -s -X POST "$API_BASE/Units" -H "Content-Type: application/json" -d "{\"Name\": \"CN ƒêo√†n K·∫øt\", \"Code\": \"CNL2_DoanKet\", \"Type\": \"CNL2\", \"ParentUnitId\": $ROOT_ID}")
DK_ID=$(echo "$DK_RESPONSE" | jq -r '.Id // empty')
echo "‚úÖ CN ƒêo√†n K·∫øt ID: $DK_ID"

TAN_RESPONSE=$(curl -s -X POST "$API_BASE/Units" -H "Content-Type: application/json" -d "{\"Name\": \"CN T√¢n Uy√™n\", \"Code\": \"CNL2_TanUyen\", \"Type\": \"CNL2\", \"ParentUnitId\": $ROOT_ID}")
TAN_ID=$(echo "$TAN_RESPONSE" | jq -r '.Id // empty')
echo "‚úÖ CN T√¢n Uy√™n ID: $TAN_ID"

NH_RESPONSE=$(curl -s -X POST "$API_BASE/Units" -H "Content-Type: application/json" -d "{\"Name\": \"CN N·∫≠m H√†ng\", \"Code\": \"CNL2_NamHang\", \"Type\": \"CNL2\", \"ParentUnitId\": $ROOT_ID}")
NH_ID=$(echo "$NH_RESPONSE" | jq -r '.Id // empty')
echo "‚úÖ CN N·∫≠m H√†ng ID: $NH_ID"

# 3. T·∫°o 7 Ph√≤ng PNVL1 thu·ªôc H·ªôi s·ªü
echo ""
echo "3Ô∏è‚É£ T·∫°o 7 Ph√≤ng PNVL1 thu·ªôc H·ªôi s·ªü..."

if [ -n "$HS_ID" ]; then
    create_unit "Ph√≤ng T√≠n d·ª•ng" "PNVL1_TinDung" "PNVL1" "$HS_ID"
    create_unit "Ph√≤ng Huy ƒë·ªông v·ªën" "PNVL1_HuyDongVon" "PNVL1" "$HS_ID"
    create_unit "Ph√≤ng K·∫ø to√°n" "PNVL1_KeToan" "PNVL1" "$HS_ID"
    create_unit "Ph√≤ng Qu·∫£n l√Ω r·ªßi ro" "PNVL1_QuanLyRuiRo" "PNVL1" "$HS_ID"
    create_unit "Ph√≤ng Nh√¢n s·ª±" "PNVL1_NhanSu" "PNVL1" "$HS_ID"
    create_unit "Ph√≤ng C√¥ng ngh·ªá th√¥ng tin" "PNVL1_CNTT" "PNVL1" "$HS_ID"
    create_unit "Ph√≤ng Tu√¢n th·ªß" "PNVL1_TuanThu" "PNVL1" "$HS_ID"
fi

# 4. T·∫°o c√°c PNVL2 cho t·ª´ng Chi nh√°nh
echo ""
echo "4Ô∏è‚É£ T·∫°o c√°c Ph√≤ng PNVL2 cho 8 Chi nh√°nh..."

# CN B√¨nh L∆∞ - 3 ph√≤ng
if [ -n "$BL_ID" ]; then
    create_unit "Ph√≤ng T√≠n d·ª•ng" "PNVL2_BL_TinDung" "PNVL2" "$BL_ID"
    create_unit "Ph√≤ng Huy ƒë·ªông v·ªën" "PNVL2_BL_HuyDongVon" "PNVL2" "$BL_ID"
    create_unit "Ph√≤ng K·∫ø to√°n" "PNVL2_BL_KeToan" "PNVL2" "$BL_ID"
fi

# CN Phong Th·ªï - 3 ph√≤ng
if [ -n "$PT_ID" ]; then
    create_unit "Ph√≤ng T√≠n d·ª•ng" "PNVL2_PT_TinDung" "PNVL2" "$PT_ID"
    create_unit "Ph√≤ng Huy ƒë·ªông v·ªën" "PNVL2_PT_HuyDongVon" "PNVL2" "$PT_ID"
    create_unit "Ph√≤ng K·∫ø to√°n" "PNVL2_PT_KeToan" "PNVL2" "$PT_ID"
fi

# CN S√¨n H·ªì - 3 ph√≤ng
if [ -n "$SH_ID" ]; then
    create_unit "Ph√≤ng T√≠n d·ª•ng" "PNVL2_SH_TinDung" "PNVL2" "$SH_ID"
    create_unit "Ph√≤ng Huy ƒë·ªông v·ªën" "PNVL2_SH_HuyDongVon" "PNVL2" "$SH_ID"
    create_unit "Ph√≤ng K·∫ø to√°n" "PNVL2_SH_KeToan" "PNVL2" "$SH_ID"
fi

# CN Bum T·ªü - 3 ph√≤ng
if [ -n "$BT_ID" ]; then
    create_unit "Ph√≤ng T√≠n d·ª•ng" "PNVL2_BT_TinDung" "PNVL2" "$BT_ID"
    create_unit "Ph√≤ng Huy ƒë·ªông v·ªën" "PNVL2_BT_HuyDongVon" "PNVL2" "$BT_ID"
    create_unit "Ph√≤ng K·∫ø to√°n" "PNVL2_BT_KeToan" "PNVL2" "$BT_ID"
fi

# CN Than Uy√™n - 3 ph√≤ng
if [ -n "$TU_ID" ]; then
    create_unit "Ph√≤ng T√≠n d·ª•ng" "PNVL2_TU_TinDung" "PNVL2" "$TU_ID"
    create_unit "Ph√≤ng Huy ƒë·ªông v·ªën" "PNVL2_TU_HuyDongVon" "PNVL2" "$TU_ID"
    create_unit "Ph√≤ng K·∫ø to√°n" "PNVL2_TU_KeToan" "PNVL2" "$TU_ID"
fi

# CN ƒêo√†n K·∫øt - 3 ph√≤ng
if [ -n "$DK_ID" ]; then
    create_unit "Ph√≤ng T√≠n d·ª•ng" "PNVL2_DK_TinDung" "PNVL2" "$DK_ID"
    create_unit "Ph√≤ng Huy ƒë·ªông v·ªën" "PNVL2_DK_HuyDongVon" "PNVL2" "$DK_ID"
    create_unit "Ph√≤ng K·∫ø to√°n" "PNVL2_DK_KeToan" "PNVL2" "$DK_ID"
fi

# CN T√¢n Uy√™n - 3 ph√≤ng
if [ -n "$TAN_ID" ]; then
    create_unit "Ph√≤ng T√≠n d·ª•ng" "PNVL2_TAN_TinDung" "PNVL2" "$TAN_ID"
    create_unit "Ph√≤ng Huy ƒë·ªông v·ªën" "PNVL2_TAN_HuyDongVon" "PNVL2" "$TAN_ID"
    create_unit "Ph√≤ng K·∫ø to√°n" "PNVL2_TAN_KeToan" "PNVL2" "$TAN_ID"
fi

# CN N·∫≠m H√†ng - 3 ph√≤ng
if [ -n "$NH_ID" ]; then
    create_unit "Ph√≤ng T√≠n d·ª•ng" "PNVL2_NH_TinDung" "PNVL2" "$NH_ID"
    create_unit "Ph√≤ng Huy ƒë·ªông v·ªën" "PNVL2_NH_HuyDongVon" "PNVL2" "$NH_ID"
    create_unit "Ph√≤ng K·∫ø to√°n" "PNVL2_NH_KeToan" "PNVL2" "$NH_ID"
fi

# 5. T·∫°o 5 PGDL2 (PGD)
echo ""
echo "5Ô∏è‚É£ T·∫°o 5 Ph√≤ng giao d·ªãch PGDL2..."

# Phong Th·ªï c√≥ 1 PGD
if [ -n "$PT_ID" ]; then
    create_unit "PGD M∆∞·ªùng So" "PGDL2_PT_MuongSo" "PGDL2" "$PT_ID"
fi

# Than Uy√™n c√≥ 1 PGD
if [ -n "$TU_ID" ]; then
    create_unit "PGD Noong H√©t" "PGDL2_TU_NoongHet" "PGDL2" "$TU_ID"
fi

# ƒêo√†n K·∫øt c√≥ 2 PGD
if [ -n "$DK_ID" ]; then
    create_unit "PGD P√° T·∫ßn" "PGDL2_DK_PaTan" "PGDL2" "$DK_ID"
    create_unit "PGD Ka LƒÉng" "PGDL2_DK_KaLang" "PGDL2" "$DK_ID"
fi

# T√¢n Uy√™n c√≥ 1 PGD
if [ -n "$TAN_ID" ]; then
    create_unit "PGD T√† Mung" "PGDL2_TAN_TaMung" "PGDL2" "$TAN_ID"
fi

# Ki·ªÉm tra k·∫øt qu·∫£
echo ""
echo "üéØ KI·ªÇM TRA K·∫æT QU·∫¢ CU·ªêI C√ôNG"

# ƒê·∫øm c√°c lo·∫°i ƒë∆°n v·ªã
FINAL_UNITS=$(curl -s "$API_BASE/Units")
CNL1_COUNT=$(echo "$FINAL_UNITS" | jq -r '.[] | select(.Type == "CNL1") | .Name' | wc -l)
CNL2_COUNT=$(echo "$FINAL_UNITS" | jq -r '.[] | select(.Type == "CNL2") | .Name' | wc -l)
PNVL1_COUNT=$(echo "$FINAL_UNITS" | jq -r '.[] | select(.Type == "PNVL1") | .Name' | wc -l)
PNVL2_COUNT=$(echo "$FINAL_UNITS" | jq -r '.[] | select(.Type == "PNVL2") | .Name' | wc -l)
PGDL2_COUNT=$(echo "$FINAL_UNITS" | jq -r '.[] | select(.Type == "PGDL2") | .Name' | wc -l)
TOTAL_COUNT=$(echo "$FINAL_UNITS" | jq length)

echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
echo "‚îÇ  LO·∫†I           ‚îÇ  M·ª§C TI√äU  ‚îÇ  TH·ª∞C T·∫æ  ‚îÇ     M√î T·∫¢    ‚îÇ"
echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
echo "‚îÇ  CNL1 (Root)     ‚îÇ     1      ‚îÇ    $CNL1_COUNT     ‚îÇ Lai Ch√¢u     ‚îÇ"
echo "‚îÇ  CNL2 (CN)       ‚îÇ     9      ‚îÇ    $CNL2_COUNT     ‚îÇ HS + 8 CN    ‚îÇ"
echo "‚îÇ  PNVL1 (P.HS)    ‚îÇ     7      ‚îÇ    $PNVL1_COUNT     ‚îÇ Ph√≤ng HS     ‚îÇ"
echo "‚îÇ  PNVL2 (P.CN)    ‚îÇ    24      ‚îÇ   $PNVL2_COUNT    ‚îÇ Ph√≤ng CN     ‚îÇ"
echo "‚îÇ  PGDL2 (PGD)     ‚îÇ     5      ‚îÇ    $PGDL2_COUNT     ‚îÇ PGD          ‚îÇ"
echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
echo "‚îÇ  T·ªîNG C·ªòNG       ‚îÇ    46      ‚îÇ   $TOTAL_COUNT    ‚îÇ Ver2 Total   ‚îÇ"
echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"

if [ "$TOTAL_COUNT" -eq 46 ]; then
    echo "üéâ TH√ÄNH C√îNG! ƒê√£ t·∫°o ƒë·ªß 46 ƒë∆°n v·ªã theo c·∫•u tr√∫c Ver2"
else
    echo "‚ö†Ô∏è K·∫øt qu·∫£ ch∆∞a ƒë·∫°t c·∫•u tr√∫c Ver2 mong mu·ªën"
fi

echo "üìÖ Ho√†n th√†nh: $(date)"
