#!/bin/bash

# Script t√¨m v√† kh·∫Øc ph·ª•c c√°c warning ph·ªï bi·∫øn trong d·ª± √°n Vue.js
# T√°c gi·∫£: Copilot
# Ng√†y t·∫°o: 30/07/2025

# M√†u s·∫Øc cho output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç B·∫Øt ƒë·∫ßu ph√¢n t√≠ch v√† kh·∫Øc ph·ª•c warnings...${NC}"

# Chuy·ªÉn ƒë·∫øn th∆∞ m·ª•c frontend
cd "$(dirname "$0")"

# T√¨m v√† x·ª≠ l√Ω console.log trong code
echo -e "${BLUE}üîç ƒêang t√¨m console.log trong code s·∫£n xu·∫•t...${NC}"
CONSOLE_LOGS=$(grep -r --include="*.vue" --include="*.js" --include="*.ts" "console\.log" src | grep -v "// console\.log" | grep -v "/\* console\.log" | wc -l | tr -d ' ')

if [ "$CONSOLE_LOGS" -gt 0 ]; then
  echo -e "${YELLOW}‚ö†Ô∏è Ph√°t hi·ªán $CONSOLE_LOGS c√¢u l·ªánh console.log ch∆∞a ƒë∆∞·ª£c comment:${NC}"
  grep -r --include="*.vue" --include="*.js" --include="*.ts" -n "console\.log" src | grep -v "// console\.log" | grep -v "/\* console\.log" | head -10

  echo -e "${GREEN}üí° G·ª£i √Ω: Comment ho·∫∑c x√≥a console.log trong code s·∫£n xu·∫•t${NC}"

  read -p "B·∫°n c√≥ mu·ªën comment t·∫•t c·∫£ console.log kh√¥ng? (y/n) " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${BLUE}üîß ƒêang comment console.log...${NC}"

    # Thay th·∫ø console.log b·∫±ng // console.log trong c√°c file
    find src -type f \( -name "*.js" -o -name "*.ts" -o -name "*.vue" \) -exec sed -i '' 's/console\.log/\/\/ console.log/g' {} \;

    echo -e "${GREEN}‚úÖ ƒê√£ comment t·∫•t c·∫£ console.log!${NC}"
  fi
fi

# T√¨m v√† x·ª≠ l√Ω c√°c component kh√¥ng ƒë·∫∑t t√™n theo quy ∆∞·ªõc
echo -e "${BLUE}üîç Ki·ªÉm tra t√™n component...${NC}"
COMPONENT_FILES=$(find src/components -type f -name "*.vue" | wc -l | tr -d ' ')
NON_PASCAL_CASE=$(find src/components -type f -name "*.vue" | grep -v -E '^src/components/[A-Z][A-Za-z0-9]*\.vue$' | wc -l | tr -d ' ')

if [ "$NON_PASCAL_CASE" -gt 0 ]; then
  echo -e "${YELLOW}‚ö†Ô∏è Ph√°t hi·ªán $NON_PASCAL_CASE/$COMPONENT_FILES component kh√¥ng ƒë·∫∑t t√™n theo PascalCase:${NC}"
  find src/components -type f -name "*.vue" | grep -v -E '^src/components/[A-Z][A-Za-z0-9]*\.vue$' | head -10
  echo -e "${GREEN}üí° G·ª£i √Ω: ƒê·ªïi t√™n c√°c component theo quy ∆∞·ªõc PascalCase${NC}"
fi

# T√¨m v-for kh√¥ng c√≥ :key
echo -e "${BLUE}üîç Ki·ªÉm tra v-for kh√¥ng c√≥ :key...${NC}"
VFOR_WITHOUT_KEY=$(grep -r --include="*.vue" -A 1 "v-for=" src | grep -v ":key=" | grep -B 1 "v-for=" | grep "v-for=" | wc -l | tr -d ' ')

if [ "$VFOR_WITHOUT_KEY" -gt 0 ]; then
  echo -e "${YELLOW}‚ö†Ô∏è Ph√°t hi·ªán $VFOR_WITHOUT_KEY tr∆∞·ªùng h·ª£p v-for kh√¥ng c√≥ :key:${NC}"
  grep -r --include="*.vue" -n -A 1 "v-for=" src | grep -v ":key=" | grep -B 1 "v-for=" | grep "v-for=" | head -10
  echo -e "${GREEN}üí° G·ª£i √Ω: Th√™m :key cho t·∫•t c·∫£ v-for, v√≠ d·ª•: v-for=\"item in items\" :key=\"item.id\"${NC}"
fi

# T√¨m c√°c template kh√¥ng c√≥ th·∫ª root duy nh·∫•t
echo -e "${BLUE}üîç Ki·ªÉm tra c·∫•u tr√∫c template...${NC}"
MULTIPLE_ROOT=$(grep -r --include="*.vue" -A 5 "<template>" src | grep -v "<template><div" | grep -v "<template><section" | grep -v "<template><form" | grep -v "<template>$" | wc -l | tr -d ' ')

if [ "$MULTIPLE_ROOT" -gt 0 ]; then
  echo -e "${YELLOW}‚ö†Ô∏è C√≥ th·ªÉ c√≥ $MULTIPLE_ROOT component v·ªõi nhi·ªÅu th·∫ª root:${NC}"
  echo -e "${GREEN}üí° G·ª£i √Ω: ƒê·∫£m b·∫£o m·ªói template ch·ªâ c√≥ m·ªôt th·∫ª root${NC}"
fi

# Ki·ªÉm tra l·ªói unused imports
echo -e "${BLUE}üîç Ki·ªÉm tra unused imports...${NC}"
echo -e "${GREEN}üí° G·ª£i √Ω: Ch·∫°y l·ªánh 'npm run lint' ƒë·ªÉ t√¨m v√† s·ª≠a unused imports${NC}"

# Ki·ªÉm tra v√† b√°o c√°o k·∫øt qu·∫£
echo -e "${BLUE}üìä T·ªïng k·∫øt:${NC}"
echo -e "  ${YELLOW}‚ö†Ô∏è Console.log ch∆∞a comment: $CONSOLE_LOGS${NC}"
echo -e "  ${YELLOW}‚ö†Ô∏è Component kh√¥ng theo PascalCase: $NON_PASCAL_CASE${NC}"
echo -e "  ${YELLOW}‚ö†Ô∏è v-for kh√¥ng c√≥ :key: $VFOR_WITHOUT_KEY${NC}"
echo -e "  ${YELLOW}‚ö†Ô∏è Template c√≥ th·ªÉ c√≥ nhi·ªÅu th·∫ª root: $MULTIPLE_ROOT${NC}"

if [ $((CONSOLE_LOGS + NON_PASCAL_CASE + VFOR_WITHOUT_KEY + MULTIPLE_ROOT)) -eq 0 ]; then
  echo -e "${GREEN}‚úÖ Tuy·ªát v·ªùi! Kh√¥ng ph√°t hi·ªán warning ph·ªï bi·∫øn n√†o.${NC}"
else
  echo -e "${YELLOW}‚ö†Ô∏è ƒê√£ ph√°t hi·ªán m·ªôt s·ªë warning. H√£y xem x√©t s·ª≠a ch√∫ng ƒë·ªÉ c·∫£i thi·ªán ch·∫•t l∆∞·ª£ng code.${NC}"
fi

echo -e "${GREEN}‚úÖ Ph√¢n t√≠ch ho√†n t·∫•t!${NC}"
