#!/bin/bash

# üéØ Unit KPI Assignment Enhancement - Final Verification Script
# This script tests all the implemented enhancements to ensure they work correctly

echo "üéØ Unit KPI Assignment Enhancement - Final Verification"
echo "======================================================"
echo ""

# Test API endpoints
echo "üìä 1. Testing API Endpoints..."
echo "-------------------------------"

echo -n "  - HoiSo table indicators: "
HOISO_COUNT=$(curl -s "http://localhost:5055/api/KpiAssignment/table/HoiSo" | jq '.indicators."$values" | length' 2>/dev/null)
if [ "$HOISO_COUNT" = "11" ]; then
    echo "‚úÖ $HOISO_COUNT indicators (CORRECT)"
else
    echo "‚ùå $HOISO_COUNT indicators (EXPECTED: 11)"
fi

echo -n "  - GiamdocCnl2 table indicators: "
CNL2_COUNT=$(curl -s "http://localhost:5055/api/KpiAssignment/table/GiamdocCnl2" | jq '.indicators."$values" | length' 2>/dev/null)
if [ "$CNL2_COUNT" = "11" ]; then
    echo "‚úÖ $CNL2_COUNT indicators (CORRECT)"
else
    echo "‚ùå $CNL2_COUNT indicators (EXPECTED: 11)"
fi

echo -n "  - CNL1 units available: "
CNL1_UNITS=$(curl -s "http://localhost:5055/api/Units" | jq '[."$values"[] | select(.type == "CNL1")] | length' 2>/dev/null)
echo "‚úÖ $CNL1_UNITS unit(s)"

echo -n "  - CNL2 units available: "
CNL2_UNITS=$(curl -s "http://localhost:5055/api/Units" | jq '[."$values"[] | select(.type == "CNL2")] | length' 2>/dev/null)
echo "‚úÖ $CNL2_UNITS units"

echo -n "  - KhoanPeriods available: "
PERIODS=$(curl -s "http://localhost:5055/api/KhoanPeriods" | jq '."$values" | length' 2>/dev/null)
echo "‚úÖ $PERIODS periods"

echo ""

# Test table name mapping
echo "üìã 2. Testing Table Name Mapping..."
echo "----------------------------------"

echo -n "  - HoiSo table name: "
HOISO_NAME=$(curl -s "http://localhost:5055/api/KpiAssignment/table/HoiSo" | jq -r '.tableName' 2>/dev/null)
if [ "$HOISO_NAME" = "H·ªôi s·ªü" ]; then
    echo "‚úÖ '$HOISO_NAME' (CORRECT)"
else
    echo "‚ùå '$HOISO_NAME' (EXPECTED: 'H·ªôi s·ªü')"
fi

echo -n "  - GiamdocCnl2 table name: "
CNL2_NAME=$(curl -s "http://localhost:5055/api/KpiAssignment/table/GiamdocCnl2" | jq -r '.tableName' 2>/dev/null)
if [ "$CNL2_NAME" = "Gi√°m ƒë·ªëc CNL2" ]; then
    echo "‚úÖ '$CNL2_NAME' (CORRECT)"
else
    echo "‚ùå '$CNL2_NAME' (EXPECTED: 'Gi√°m ƒë·ªëc CNL2')"
fi

echo ""

# Check file modifications
echo "üîß 3. Checking Implementation Files..."
echo "-------------------------------------"

if [ -f "src/views/UnitKpiAssignmentView.vue" ]; then
    echo "‚úÖ UnitKpiAssignmentView.vue exists"
    
    # Check for "H·ªôi s·ªü" in table header
    if grep -q "H·ªôi s·ªü" src/views/UnitKpiAssignmentView.vue; then
        echo "  ‚úÖ Contains 'H·ªôi s·ªü' table header"
    else
        echo "  ‚ùå Missing 'H·ªôi s·ªü' table header"
    fi
    
    # Check for onBranchChange method
    if grep -q "onBranchChange" src/views/UnitKpiAssignmentView.vue; then
        echo "  ‚úÖ Contains onBranchChange method"
    else
        echo "  ‚ùå Missing onBranchChange method"
    fi
    
    # Check for getKpiIndicatorsForUnitType call
    if grep -q "getKpiIndicatorsForUnitType" src/views/UnitKpiAssignmentView.vue; then
        echo "  ‚úÖ Contains getKpiIndicatorsForUnitType calls"
    else
        echo "  ‚ùå Missing getKpiIndicatorsForUnitType calls"
    fi
else
    echo "‚ùå UnitKpiAssignmentView.vue not found"
fi

if [ -f "src/services/unitKpiAssignmentService.js" ]; then
    echo "‚úÖ unitKpiAssignmentService.js exists"
    
    # Check for new service methods
    if grep -q "getKpiIndicatorsForUnitType" src/services/unitKpiAssignmentService.js; then
        echo "  ‚úÖ Contains getKpiIndicatorsForUnitType method"
    else
        echo "  ‚ùå Missing getKpiIndicatorsForUnitType method"
    fi
    
    if grep -q "getKpiIndicatorsByTableType" src/services/unitKpiAssignmentService.js; then
        echo "  ‚úÖ Contains getKpiIndicatorsByTableType method"
    else
        echo "  ‚ùå Missing getKpiIndicatorsByTableType method"
    fi
else
    echo "‚ùå unitKpiAssignmentService.js not found"
fi

echo ""

# Summary
echo "üìù 4. Implementation Summary..."
echo "------------------------------"

if [ "$HOISO_COUNT" = "11" ] && [ "$CNL2_COUNT" = "11" ] && [ "$HOISO_NAME" = "H·ªôi s·ªü" ] && [ "$CNL2_NAME" = "Gi√°m ƒë·ªëc CNL2" ]; then
    echo "‚úÖ ALL REQUIREMENTS IMPLEMENTED SUCCESSFULLY!"
    echo ""
    echo "üéØ Summary of Changes:"
    echo "  ‚úÖ Requirement 1: CNL1 column now shows 'H·ªôi s·ªü' instead of unit name"
    echo "  ‚úÖ Requirement 2: Auto-load KPI functionality implemented"
    echo "  ‚úÖ Service layer: New methods for KPI loading by unit type"
    echo "  ‚úÖ Component logic: Enhanced branch change handling"
    echo "  ‚úÖ API integration: Proper \$values format handling"
    echo ""
    echo "üöÄ Ready for Production Use!"
else
    echo "‚ùå Some issues detected. Please review the output above."
fi

echo ""
echo "üåê Manual Testing:"
echo "  1. Open: http://localhost:3000/unit-kpi-assignment"
echo "  2. Select a period and branch"
echo "  3. Verify KPI indicators load automatically"
echo "  4. Click 'T·∫°o giao kho√°n m·ªõi' to test modal"
echo "  5. Check table shows 'H·ªôi s·ªü' in first column"
echo ""
echo "üìÑ Quick Verification: http://localhost:3000/quick-verification.html"
